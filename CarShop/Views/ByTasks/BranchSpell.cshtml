@using CarShop.Properties;
@{
    ViewBag.Title = "BranchSpell";
    Layout = "~/Views/ByTasks/_Layout.cshtml";
}

@section headerscripts {
    <h2>5. Управление сменой</h2>
}

<h2>РОЛЬ: Главный продавец(бухгалтер) подразделения</h2>
Подразделение не может провести продажу вне рамок како-либо открытой смены.

<h3>Регламент</h3>
@Html.ActionLink(Resources.BranchSpell_INDEX, "Index", "BranchSpell", routeValues: null, htmlAttributes: new { @class = "btn btn-xs btn-primary" })
Переход на данную страницу дает возможность управлять текущей сменой. <br />
<span style="font-weight:bold">Управление сменой подчиняется следующим бизнес правилам:</span><br />
Открыть новую смену можно, если текущая смена или отсутствует или закрыта. <br />
Закрыть текущую смену можно, если она находится в заблокированном состоянии.<p />
Итак, текущая смена закрыта или текущей смены нет вовсе. Переходим на страницу по ссылке выше и кликаем на ссылку "Открыть новую смену".
На появившейся форме отредактировать дату (если это надо) и подтвердить намерение кликнув по кнопке "Открыть новую смену". <b>Заметим, что новая смена открывается в блокированном состоянии.</b>
Сделано это для того, чтобы после открытия "@Resources.BranchBookerName" разместил исполнителей по рабочим местам. После этого необходимо снять блокировку текущей смены.<br />
<span style="font-weight:bold">Для снятия блокировки с текущей смены</span> необходимо перейти на форму по ссылке выше. Далее кликнуть по ссылке подробно. На появившейся форме кликнуть кнопку разблокировать.<br />
<span style="font-weight:bold">Для блокировки текущей смены</span> необходимо перейти на форму по ссылке выше. Далее кликнуть по ссылке подробно. На появившейся форме кликнуть кнопку заблокировать.<br />
<span style="font-weight:bold">Для закрытия текущей смены</span> необходимо перейти на форму по ссылке выше. Далее кликнуть по ссылке подробно. На появившейся форме кликнуть кнопку закрыть.<p />
<span style="font-weight:bold">В данном решении реализован функционал отложенного закрытия смены:</span><p />
Действия описанные выше манипулируют парой флагов (открыта,блокирована). Но этого недостаточно с точки зрения ведения ведомостей переоценки.
Напомним, что решение манипулирует тремя ресурсами: приход, остатки, расход. Когда продавец проводит продажу происходит списание с остатков и только.
В то время как приходные ведомости остаются нетронутыми. Чтобы ведомости переоценки велись корректно необходимо списывать с прихода также.
Операция списания с прихода достаточно медленная и исполняется после закрытия смены, когда сторнирование продаж запрещено.
С другой стороны во время списания с прихода могут возникнуть ошибки, которые необходимо анализировать и может быть вносить
исправления в картотеки и запускать процесс списания с прихода повторно. Коротко говоря, закрытие смены в любой учетной системе - это праздник,
который может растянуться на часы а то и дни.     С другой стороны наступил новый день и необходимо начинать продажи,
а стало быть открывать новую смену и стало быть старая смена должна быть закрыта. Тут то и понадобится <span style="font-weight:bold">отложенное закрытие смены.</span>
Массовый процесс <b>отложенного закрытия смены запускается через историю ранее открытых смен.</b> Выше мы постарались показать причины по которым пришлось реализовать такого рода функционал.<p />
    

