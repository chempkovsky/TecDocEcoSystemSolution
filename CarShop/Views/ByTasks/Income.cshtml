@using CarShop.Properties;

@{
    ViewBag.Title = "Income";
    Layout = "~/Views/ByTasks/_Layout.cshtml";
}

@section headerscripts {
    <h2>2. Приход на магазин</h2>
}

<h2>РОЛЬ: Главный продавец(бухгалтер) подразделения</h2>
Товар приходит на магазин торговой сети. 
Поэтому право на внесение изменений присвоено роли лавный продавец(бухгалтер) подразделения. <p />

Регламент формирования прихода на магазин включает:
1. Создание ведомости прихода<br>
2. Наполнение ведомости артикулами товаров<br>
3. Оприходование ведомости<p />
Если необходимо откатить операцию оприходования выполняется сторнирование оприходованной ведомости.


<h3>Создание ведомости прихода</h3>
Перейдите по ссылке
@Html.ActionLink(Resources.IncomePayRollTDES_INDEX, "Index", "IncomePayRoll", routeValues: null, htmlAttributes: new { @class = "btn btn-xs btn-primary" })
к списку ведомостей прихода вашего магазина.
Кликните по кнопке <b>Создать</b>
    для запуска диалога создания ведомости. Откроется форма предлагающая заполнить стандартные поля шапки ведомости.
    Поле Guid - это уникальный идентификатор записи.
    Поле заметка используется для внесения номера товарно-транспортной накладной, которая сопровождает товар
    ID поставщика и наименование поставщика можно заполнить (и рекомендуется) используя кнопку поиска.
    Закончите ввод нажав кнопку Сохранить.


    <h3>Перечень поставщиков</h3>
    Перечень поставщиков ведется на уровне предприятия наполняется (редактируется) исполнителем с ролью <b>Администратор предприятия</b>.
    Войдите в систему пользователем с правами <b>Администратор предприятия</b> и перейдите по ссылке
    @Html.ActionLink(Resources.EnterpriseSupplier_INDEX, "Index", "EnterpriseSupplier", new { }, new { @class = "btn btn-xs btn-primary" })
    на страницу с перечнем поставщиков для вашего предприятия и воспользуйтесь кнопкой создать, чтобы открыть форму для создания записи поставщика товаров.
    Для созданного поставщика перейдите по кнопке <b>Подробно</b>. Это даст вам возможность внести контакты и адреса поставщика, через соответствующие пункты меню.
    <p />
    Если вы вошли с ролью администратора экосистемы вы дожны на страничке
    @Html.ActionLink(Resources.EnterpriseTDES_INDEX, "Index", "Enterprises", new { }, new { @class = "btn btn-info btn-xs" })
    выбрать предприятие кликнув по кнопке Детально. Появится страница с меню действий для выбранного предприятия.
    Кликните пункт меню поставщики предприятия.


    <h3>Наполнение ведомости прихода</h3>
    Перейдите по ссылке
    @Html.ActionLink(Resources.IncomePayRollTDES_INDEX, "Index", "IncomePayRoll", routeValues: null, htmlAttributes: new { @class = "btn btn-xs btn-primary" })
    к списку ведомостей прихода вашего магазина.
    Используя навигацию и фильтр по датам  отпозиционируйтесь на ведомости, которую вы будете наполнять перечнем товаров.
    Кликните по кнопке <b>подробно</b>. Вам откроется страница на которой кликните пункт меню <b>Артикулы</b>.
    Вы перейдете на страницу с перечнем товаров (или артикулов) по данной приходной ведомости.<p />
    Кликните кнопку добавить, чтобы открыть диалог для внесения артикула в вашу приходную ведомость.<p />

    <h4>Каждая запись артикула ведомости прихода состоит из двух пар артикулов.</h4>
    Первая пара (Id, Брэнд) - это артикул в нотации поставщика.
    Данная пара присутствует в сопроводительном документе поставки товара. Вторая пара (Id, Брэнд) - это описание артикула в нумерации,
    которую ведет ваше подразделение. Напомним, что есть еще одна пара (Id, Брэнд) - это нотация TecDoc.
    Соответсвие внутренней нумерации подразделения и нумерации TecDoc ведется в каталоге
    @Html.ActionLink(Resources.EnterpriseArticle_INDEX, "Index", "EnterpriseArticle2", new { }, new { @class = "btn btn-primary btn-xs" }).

    Право редактировать данный ресурс предоставлено администратору предприятия. (Не путать с администратором подразделения)
    Вернемся к наполнению приходной ведомости. Артикул поставщика вносится руками. Артикул подразделения выбирается из списка.
    Вносится цена закупки, вносится цена продажи, вносится количество и последнее - это флаг "С переоценкой".
    Если этот флаг выставлен, то по вашей приходной ведомости при запуске функции "сформировать ведомость переоценки" для артикула будут
    подняты все ненулевые остатки и автоматически составлена ведомость переоценки остатков данного наименования товаров.
    Анализу подвергаются не ресурс текущих остатков, но ранее оприходованные ведомости. После закрытия смены через механизм
    отложенного закрытия смены проводится списание с оприходованных ведомостей. Напомним, что при проведении продажи проводится списание только с ресурса текущих остатков.
    Операция продажи не затрагивает приходные ведомости.

    <h3>Оприходование</h3>
    После наполнения ведомости артикулами (с указанием цены закупки, цены продажи, кол-ва по ведомости, флага "С переоценкой") необходимо выполнить оприходование.
    Для этого.<p />
    Перейдите по ссылке
    @Html.ActionLink(Resources.IncomePayRollTDES_INDEX, "Index", "IncomePayRoll", routeValues: null, htmlAttributes: new { @class = "btn btn-xs btn-primary" })
    к списку ведомостей прихода вашего магазина.
    Используя навигацию и фильтр по датам отпозиционируйтесь на ведомости, которую вы будете оприходовать.
    Кликните по кнопке подробно. Вам откроется страница на которой кликните пункт меню <b>Оприходовать ведемость</b>.
    Это откроет вам диалог позволяющий запустить процесс оприходования ведомости.
    На этой форме кликните кнопку "Оприходовать ведомость".
    При этом запустится массовый процесс изменения ресурса остатков (цена, количество). Если оприходование прошло успешно на ведомости включится флаг "Оприх.".
    <p />
    <b>Не бойтесь запускать процесс оприходования несколько раз.</b>
    Флаг оприходования проставляется не только на шапке ведомости, но и на каждом артикуле приходной ведомости.
    Поэтому при повторном запуске оприходования не происходит количественного задваивания остатков.
    <b>
        Алгоритмы разработаны с предположением, что в системе во время проведения может произойти какой-либо сбой (к примеру электричество) или зависание.
        Алгоритмы таковы, что при возобновлении работы системы после сбоя можно продолжить процесс через повторный запуск.
    </b>

    <h3>Сторнирование</h3>
    Сторнирование проводится следующим образом.
    Перейдите по ссылке
    @Html.ActionLink(Resources.IncomePayRollTDES_INDEX, "Index", "IncomePayRoll", routeValues: null, htmlAttributes: new { @class = "btn btn-xs btn-primary" })
    к списку ведомостей прихода вашего магазина.
    Используя навигацию и фильтр по датам отпозиционируйтесь на ведомости, которую вы будете оприходовать.
    Кликните по кнопке подробно. Кликните кнопку "Сторнирование".
    Откроется форма "Сторнирование". На этой форме кликните кнопку "Сторнирование". При этом запустится массовый процесс изменения ресурса остатков (цена, количество).
    Если Сторнирование прошло успешно на ведомости включится флаг "Сторн".
    <p />
    <b>Не бойтесь запускать процесс сторнирования несколько раз.</b> Флаг сторнирования проставляется не только на шапке ведомости, но и на каждом артикуле приходной ведомости.
    Поэтому при повторном запуске сторнирования не происходит количественного задваивания списанных остатков.
    <b>
        Алгоритмы разработаны с предположением, что в системе во время проведения может произойти какой-либо сбой (к примеру электричество) или зависание.
        Алгоритмы таковы, что при возобновлении работы системы после сбоя можно продолжить процесс через повторный запуск.
    </b>

    <h3>Отчет</h3>
    После проведения оприходования и(или) сторнирования очень важно получить агрегированную информацию о том, какое количество товара и на какую сумму было оприходованно,
    было сторнированно. помимо цифр на момент оприходования приводятся цифры и цены на текущий момент. Предположим, на магазин пришло 10 единиц товара на сумму 1000 рублей.
    Было принято решение получить розничную выручку от продажи на сумму 1200 рублей. Предположим, что спустя время было продано 7 единиц товара.
    Оствшиеся три единицы подверглись переоценке на 10 процентов. Вам желательно узнать по данной ведомости количество в остатке и сумму от предполагаемой выручки
    по ценам после переоценки товара. Эти две цифры и фигурируют в отчете.


    <h3>Сформировать ведомость переоценки</h3>
    Если при внесении артикулов в приходную ведомость вы проставляли флаг "С переоценкой", то можете сформировать ведомость переоценки по данной приходной ведомости.
    Не забывайте, что после формирования ведомости переоценки необходимо провести переоценку, выполнив дополнительный регламент.
    Для того, чтобы сформировать ведомость переоценки
    Перейдите по ссылке
    @Html.ActionLink(Resources.IncomePayRollTDES_INDEX, "Index", "IncomePayRoll", routeValues: null, htmlAttributes: new { @class = "btn btn-xs btn-primary" })
    к списку ведомостей прихода вашего магазина.
    Используя навигацию и фильтр по датам отпозиционируйтесь на ведомости, для которой вы будете формировать ведомость переоценки.
    Кликните по кнопке подробно. Кликните кнопку "Сформировать ведомость переоценки".
    Откроется форма "Сформировать ведомость переоценки". На этой форме кликните кнопку "Сформировать ведомость переоценки".
    При этом запустится массовый создания ведомости переоценки. После того как ведомость переоценки сформировани ее необходимо провести.
    Как это сделать можно прочесть в параграфе "Управление ведомостями переоценки".
    <p />
    <b>Не бойтесь запускать процесс формирования несколько раз.</b> Ведомость переоценки формируется с тем же ID, что и приходная ведомость.
    Далее запускается алгоритм, который не позволяет дублировать записи
    <b>
        Алгоритмы разработаны с предположением, что в системе во время проведения может произойти какой-либо сбой (к примеру электричество) или зависание.
        Алгоритмы таковы, что при возобновлении работы системы после сбоя можно продолжить процесс через повторный запуск.
    </b>


    <h3>Приход по остатку</h3>
    Данный пункт меню запускается лишь в том случае, когда база данных каталога приходных ведомостей непомерно разразлась и вы решили создать пустую, а старую перенести в архив.
    <p />
    Процесс наполнения прихода по остатку - это операция обратная оприходованию. Если при оприходовании выполняется изменение данных в каталоге остатков по записям
    приходной ведомости, то при запуске процесса формирования прихода по остатку приходная ведомость начинает наполняться данными на основании ненулевых остатков и цен в каталоге остатков
    <p />
    Но для того, чтобы правильно работали ведомости переоценки при ненулевых остатках должны быть в наличии приходные ведомости.
    Напомним, что каждый артикул ведомости переоценки имеет ссылку на артикул приходной ведомости.
    И при проведении переоценки выполняется изменение цены не только в каталоге остатков, но и в каталоге приходных ведомостей.
    <p />
    Поэтому вы создаете пустую базу данных каталога приходных ведомостей. подключаете к решению. Оключаете старый каталог.
    В новом каталоге создаете пустую приходную ведомость и запускаете процесс наполнения этой ведомости данными на основании каталога остатков.
    Сформированная таки образом приходная ведомость содержит артикулы с включенным флагом оприходования.
    Если после формирования такой ведомости вы ошибочно ее сторнируете, то это обнулит все остатки вашего магазина.
    Поправить такую ситуацию без помощи программиста возможности не будет.
    <p />
    <b>Не бойтесь запускать процесс формирования несколько раз.</b> Ведомость прихода сформируется корректно.
    <b>
        Алгоритмы разработаны с предположением, что в системе во время проведения может произойти какой-либо сбой (к примеру электричество) или зависание.
        Алгоритмы таковы, что при возобновлении работы системы после сбоя можно продолжить процесс через повторный запуск.
    </b>
    Но нельзя формировать более одной ведомости на основании каталога остатков!!!
    <p />
    <b>
        В силу того, что данная операция очень опасна, с точки зрения учета и должна проводиться крайне редко,
        право на выполнение данной операции предоставляется только роли администратора подразделения.
    </b>

<h3>Замечание</h3>
<div class="alert alert-danger">
    1. Проведение оприходования необходимо выполнять при закрытой смене. Это исключает изменение остатков как в каталоге прихода так и в каталоге остатков.<p />
    2. Проведение cторнирования ведомости  необходимо выполнять при закрытой смене. Это исключает изменение остатков как в каталоге прихода так и в каталоге остатков.<p />
    В данном случае под закрытой сменой мы понимаем смену, которая закрыта и по которой успешно отработал процесс списания с прихода!
</div>
