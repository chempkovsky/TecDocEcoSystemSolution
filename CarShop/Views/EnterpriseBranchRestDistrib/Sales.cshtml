@using PagedList.Mvc;
@using CarShop.Properties;

@model PagedList.IPagedList<TecDocEcoSystemDbClassLibrary.SaleBasketArticleTDES>

@{
    ViewBag.Title = Resources.ArtDistrib;
    Guid? SearchEntGuid = ViewBag.SearchEntGuid;
    String EntDescription = ViewBag.EntDescription as String;
    Guid? SearchEntBranchGuid = ViewBag.SearchEntBranchGuid;
    String EntBranchDescription = ViewBag.EntBranchDescription as String;

    string searchEntArticle = ViewBag.SearchEntArticle;
    string searchEntBrandNic = ViewBag.SearchEntBrandNic;

}


<div class="panel panel-info" hidden>
    <div class="panel-heading">@ViewBag.Title</div>
    <div class="panel-body">
        @Resources.EnterpriseBranchRestHelp1<p />
        Перейдите по ссылке для получения более детальной информации
        @Html.ActionLink("Управление остатками подразделения", "EnterpriseBranchRest", "ByTasks", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })
    </div>
</div>

<h2>@Resources.ArtDistrib</h2>

<ol class="breadcrumb">
    <li>@Html.ActionLink(Resources.EnterpriseTDES_INDEX, "Index", "Enterprises")</li>
    @if (SearchEntGuid.HasValue)
    {
        <li>@Html.ActionLink(EntDescription, "Details", "Enterprises", new { id = SearchEntGuid }, new { })</li>
        <li>@Html.ActionLink(Resources.Branch_INDEX, "Index", "EnterpriseBranches", new { searchEntGuid = SearchEntGuid }, new { }) </li>

        if (SearchEntBranchGuid.HasValue)
        {
            <li>@Html.ActionLink(EntBranchDescription, "Details", "EnterpriseBranches", new { id = SearchEntBranchGuid }, new { })</li>
            <li>@Html.ActionLink(Resources.BranchRest_INDEX, "Index", "EnterpriseBranchRest", new { searchEntGuid = SearchEntGuid, searchEntBranchGuid = SearchEntBranchGuid, searchString = searchEntArticle, searchStringBy = 1 }, new { })</li>
        }
    }
</ol>

<ul class="nav nav-tabs">
    <li>@Html.ActionLink(Resources.IncomePayRollTDES_INDEX, "Index", "EnterpriseBranchRestDistrib", new { searchEntGuid = SearchEntGuid, searchEntBranchGuid = SearchEntBranchGuid, searchEntArticle = searchEntArticle, searchEntBrandNic = searchEntBrandNic }, new { })</li>
    <li class="active"><a href="#">@Resources.LookForArticleSelt_INDEX</a></li>
    <li>@Html.ActionLink(Resources.RevaluationArticleTDES_INDEX, "Revaluations", "EnterpriseBranchRestDistrib", new { searchEntGuid = SearchEntGuid, searchEntBranchGuid = SearchEntBranchGuid, searchEntArticle = searchEntArticle, searchEntBrandNic = searchEntBrandNic }, new { })</li>
    <li>@Html.ActionLink(Resources.ReturnBasketArticleTDES_INDEX, "Returns", "EnterpriseBranchRestDistrib", new { searchEntGuid = SearchEntGuid, searchEntBranchGuid = SearchEntBranchGuid, searchEntArticle = searchEntArticle, searchEntBrandNic = searchEntBrandNic }, new { })</li>
</ul>

@if (string.IsNullOrEmpty(searchEntArticle) || string.IsNullOrEmpty(searchEntBrandNic))
{
    <div class="alert alert-danger">
        @Resources.SEARCH_STRING_IS_EMPTY
    </div>
}
else
{
    TecDocEcoSystemDbClassLibrary.SaleBasketArticleTDES dummy = null;    
    
<input type="button" class="btn btn-info" onclick="$('tr.warning').each(function () { if ($(this).is(':hidden')) $(this).show(); else $(this).hide(); })" value="@Resources.ShowHideBtn" />
    
<table class="table table-condensed">
    <tr>
        <th>
            @Html.DisplayNameFor(model => dummy.PaidAt)
        </th>
        <th>
            @Html.DisplayNameFor(model => dummy.ArtAmount)
        </th>
        <th>
            @Html.DisplayNameFor(model => dummy.IsPaid)
        </th>
        <th class="hidden-xs hidden-sm">
            @Html.DisplayNameFor(model => dummy.SalePrice)
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.PaidAt)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ArtAmount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsPaid)
        </td>
        <td class="hidden-xs hidden-sm">
            @Html.DisplayFor(modelItem => item.SalePrice)
        </td>
    </tr>
    
    <tr class="warning">
        <td colspan="3">
            <dl class="dl-horizontal">

                <dt class="visible-xs  visible-sm">@Html.DisplayNameFor(model => dummy.SalePrice)</dt>
                <dd class="visible-xs  visible-sm">@Html.DisplayFor(modelItem => item.SalePrice)</dd>


                <dt>@Html.DisplayNameFor(model => dummy.SaleArticleDescriptionTDES.EntArticleDescription)</dt>
                <dd>@Html.DisplayFor(modelItem => item.SaleArticleDescriptionTDES.EntArticleDescription)</dd>

                <dt>@Html.DisplayNameFor(model => dummy.ExternArticle)</dt>
                <dd>@Html.DisplayFor(modelItem => item.ExternArticle)</dd>

                <dt>@Html.DisplayNameFor(model => dummy.ExternBrandNic)</dt>
                <dd>@Html.DisplayFor(modelItem => item.ExternBrandNic)</dd>

                <dt>@Html.DisplayNameFor(model => dummy.ExternArticleEAN)</dt>
                <dd>@Html.DisplayFor(modelItem => item.ExternArticleEAN)</dd>

                @if (item.IsPaid)
                {
                    <dt>@Html.DisplayNameFor(model => dummy.PaidAt)</dt>
                    <dd>@Html.DisplayFor(modelItem => item.PaidAt)</dd>
                }

                <dt class="alert-info">@Html.DisplayNameFor(model => dummy.ReverseAmount)</dt>
                <dd class="alert-info">@Html.DisplayFor(modelItem => item.ReverseAmount)</dd>


                <dt>@Html.DisplayNameFor(model => dummy.WorkPlaceGuid)</dt>
                <dd>@Html.DisplayFor(modelItem => item.WorkPlaceGuid)</dd>

                <dt>@Html.DisplayNameFor(model => dummy.SpellGuid)</dt>
                <dd>@Html.DisplayFor(modelItem => item.SpellGuid)</dd>
            </dl>
        </td>
    </tr>
    
}

</table>

@Html.PagedListPager(Model, page => Url.Action("Sales", new { searchEntGuid = SearchEntGuid, searchEntBranchGuid = SearchEntBranchGuid, searchEntArticle = searchEntArticle, searchEntBrandNic = searchEntBrandNic, page = page }), PagedListRenderOptions.OnlyShowFivePagesAtATime)
@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @Resources.PAGE_OF  @Model.PageCount

}    