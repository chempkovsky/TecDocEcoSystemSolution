@using CarShop.Properties;
@using CarShop.Helpers;

@{
    ViewBag.Title = "Минимальное число шагов настройки, чтобы начать работать";
    Layout = "~/Views/HowTo/_Layout.cshtml";
}

@section headerscripts {
<h2>17. Минимальное число шагов настройки, чтобы начать работать</h2>
}



<b>Замечание:</b> Ниже по тексту используются две дежурные фразы<br />
Войдите в систему пользователем, который был создан на шаге <b>17.2</b> и у которого включены флаги <b>Активен</b> и <b>Администратор</b>. <br />
и<br />
Войдите в систему пользователем, который был создан на шаге <b>17.5</b> и у которого включены флаги <b>Активен</b> и <b>Администратор</b>.<br />
Если встретилось "на шаге <b>17.2</b>", то это администратор торговой сети (предприятия).<br />
Если встретилось "на шаге <b>17.5</b>", то это администратор магазина (подразделения).<p />

Запустите веб-браузер и перейдите на локальный сайт вашего решения.
<h2>17.1. Регистрация предприятия</h2>
Выполните вход в систему пользователем <b>EcoSystemAdmin</b> (администратор экосистемы). Напомним, что такой пользователь создается автоматически при первом запуске решения.
У этого пользователя <b>пароль=EcoSystemAdmin</b>. Если вы выполнили вход этим пользователем, то должны сменить пароль этого пользователя и запомнить его.
Перейдите по ссылке<p />
@Html.ActionLink(Resources.EnterpriseTDES_INDEX, "Index", "Enterprises", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })<p />
чтобы зарегистрировать предприятие. Напомним, что одно из предприятий вы регистрировали с помощью утилиты WpfCarShop.exe.
И для зарегистрированного предприятия вы создали каталог товаров (шаги 3 - 7, если перейти к оглавлению).
Если вы уже зарегистрировали предприятие то переходите к шагу 17.2.


<h2>17.2. Добавить штат администраторов в торговую сеть</h2>
Перейдите на страницу по ссылке<p />
@Html.ActionLink(Resources.EnterpriseTDES_INDEX, "Index", "Enterprises", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })<p />
Кликните по ссылке <b>Подробно</b> для того предприятия, которое вы конфигурируете. На появившейся странице в нижней части кликните по кнопке
<b>Штат предприятия</b>. Появится страница с перечнем исполнителей привязанных к данному предприятию. Кликните по ссылке <b>Создать запись</b>,
чтобы внести нового пользователя в систему. Не ставьте флаг <b>Аудитор</b>, если вы для пользователя включили флаг <b>Администратор</b> и наоборот.
При создании карточки пользователя вы должны внести пароль. После нажатия кнопки сохранить будет создана учетная запись. И этот пользователь сможет войти в систему,
если включен флаг <b>Активен</b>.

<h2>17.3. Добавить перечень поставщиков для предприятия</h2>
Войдите в систему пользователем, который был создан на шаге <b>17.2</b> и у которого включены флаги <b>Активен</b> и <b>Администратор</b>. Перейдите на страницу по ссылке<p />
@Html.ActionLink(Resources.EnterpriseSupplier_INDEX, "Index", "EnterpriseSupplier", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })<p />
Не путайте оптовых поставщиков у которых вы закупаете товар и Брэнды. Примерами брэнда являются Coca-Cola, Oriflame. Примером поставщика является Шатэ-М.
Поставщик -- это ваш бизнес партнер у которого вы закупаете товар.


<h2>17.4. Зарегистрировать магазин (подразделение)</h2>
Войдите в систему пользователем, который был создан на шаге <b>17.2</b> и у которого включены флаги <b>Активен</b> и <b>Администратор</b>. Перейдите на страницу по ссылке<p />
@Html.ActionLink(Resources.Branch_INDEX, "Index", "EnterpriseBranches", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })<p />
Кликните по ссылке <b>Создать запись</b>, чтобы зарегистрировать подразделение. Инструкции по регистрации подрзделения даются на появившейся странице.
После нажатия кнопки создать вы зарегистрируете подразделение.

<h2>17.5. Добавить штат администраторов, бухгалтеров, продавцов для магазина</h2>
Войдите в систему пользователем, который был создан на шаге <b>17.2</b> и у которого включены флаги <b>Активен</b> и <b>Администратор</b>. Перейдите на страницу по ссылке<p />
@Html.ActionLink(Resources.Branch_INDEX, "Index", "EnterpriseBranches", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })<p />
Кликните по ссылке <b>Подробно</b> для того подразделения, для которого вы хотите сформировать штат исполнителей.
На появившейся странице кликните по ссылке <b>Создать запись</b>, чтобы внести нового пользователя в систему.
Не ставьте флаг <b>Аудитор</b>, если вы для пользователя включили какой-либо другой флаг и наоборот.
Если установлен флаг <b>Администратор</b>, то выключите остальные флаги.
Разрешается одновременно устанавливать флаг <b>Продавец</b> и флаг <b>Бухгалтер</b>.

<h2>17.6. Добавить рабочие места для магазина</h2>
Войдите в систему пользователем, который был создан на шаге <b>17.5</b> и у которого включены флаги <b>Активен</b> и <b>Администратор</b>. Перейдите на страницу по ссылке<p />
@Html.ActionLink(Resources.WorkPlace_INDEX, "Index", "EnterpriseBranchWorkPlaces", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })<p />
Данная форма позволяет управлять перечнем рабочих мест подразделения: добавлять новые, блокировать существующие рабочие места, изменять профиль (наименование).
На появившейся странице кликните по ссылке <b>Создать запись</b>, чтобы внести новое рабочее место для магазина, которому принадлежит текщий пользователь.

<h2>17.7. Сформировать остатки для магазина</h2>
Войдите в систему пользователем, который был создан на шаге <b>17.5</b> и у которого включены флаги <b>Активен</b> и <b>Бухгалтер</b>. Перейдите на страницу по ссылке<p />
@Html.ActionLink(Resources.IncomePayRollTDES_INDEX, "Index", "IncomePayRoll", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })<p />
Данная форма позволяет управлять ведомостями прихода. На появившейся странице кликните по ссылке <b>Создать запись</b>.
После заполнения формы кликните по кнопке <b>Сохранить</b>. Вы опять вернетесь на форму с перечнем приходных ведемостей.
Кликните по ссылке <b>Подробно</b> для той ведомости, которую вы будете наполнять. В нижней части экрана находится ссылка для перехода на перечень товаров данной приходной ведомости.
Кликните по ней. Появится форма с перечнем товаров данной ведомости. На появившейся странице кликните по ссылке <b>Создать запись</b>
и после заполнеия формы кликните по кнопке <b>Сохранить</b>. Начните наполнять ведомость товаром. По окончании наполнения выполните операцию <b>Оприходования</b>.<br />
<b>Оприходование</b> проводится следующим образом. Вернитесь на страницу со списком приходных ведомостей. Перейдите по ссылке <b>Подробно</b> и в нижней части формы кликните кнопку
<b>Оприходовать ведомость</b>. Откроется форма "Оприходовать ведомость". На этой форме кликните кнопку <b>Оприходовать ведомость</b>.
При этом запустится массовый процесс изменения ресурса остатков (цена, количество). Если оприходование прошло успешно на ведомости включится флаг "Оприх.".<p />
Перейдите на страницу по ссылке<p />
@Html.ActionLink(Resources.BranchRest_INDEX, "Index", "EnterpriseBranchRest", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" }) <p />
чтобы убедиться, что остатки появились для вашего магазина.<p />
Следует заметить, что приходных ведомостей будет более одной по той причине, что товары закупаются у многих поставщиков а поставщик закрепляется не за товаром, но за
приходной ведомостью. С другой стороны, если исполнителей белее одного, то разумно формировать остатки несколькими ведомостями: по ведомости на исполнителя.<p />
Перейдя на страницу остатков вы уже поняли, что можно вносить остатки минуя приходную ведомость. Если вы так поступите,
то не сможете воспользоваться механизмом ведения ведомостей переоценки. Действительно, можно менять остатки используя редактор остатков.
Но такой редактор реализован для исправления ошибок возникающих при сбое в системе (к примеру, когда возникают перебои с электричеством).

<h2>17.8. Открытие смены</h2>
Войдите в систему пользователем, который был создан на шаге <b>17.5</b> и у которого включены флаги <b>Активен</b> и <b>Бухгалтер</b>. Перейдите на страницу по ссылке<p />
@Html.ActionLink(Resources.BranchSpell_INDEX, "Index", "BranchSpell", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })<p />
Переход на данную страницу дает возможность управлять текущей сменой. <br />
<b>Управление сменой подчиняется следующим бизнес правилам:</b><br />
Открыть новую смену можно, если текущая смена или отсутствует или закрыта. <br />
Закрыть текущую смену можно, если она находится в заблокированном состоянии.<p />

Итак, текущая смена закрыта или текущей смены нет вовсе. Переходим на страницу по ссылке выше и кликаем на ссылку "Открыть новую смену".
На появившейся форме отредактировать дату (если это надо) и подтвердить намерение кликнув по кнопке "Открыть новую смену". <br />
<b>Заметим, что новая смена открывается в блокированном состоянии.</b><br />
Сделано это для того, чтобы после открытия "@Resources.BranchBookerName" разместил исполнителей по рабочим местам.
После этого необходимо снять блокировку текущей смены.<br />
<b>Для снятия блокировки с текущей смены</b> необходимо перейти на форму по ссылке выше.
Далее кликнуть по ссылке подробно. На появившейся форме кликнуть кнопку разблокировать.<br />

<h2>17.9. Закрепление исполнителей за рабочими местами</h2>
Войдите в систему пользователем, который был создан на шаге <b>17.5</b> и у которого включены флаги <b>Активен</b> и <b>Бухгалтер</b>. Перейдите на страницу по ссылке<p />
@Html.ActionLink(Resources.User2WorkPlace_INDEX, "Index", "User2WorkPlace", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })<p />
Данная форма позволяет управлять размещением пользователей по рабочим местам.
Чтобы ракрепить пользователя за рабочим местом на данной форме необходимо кликнуть по ссылке "Закрепить пользователя за рабочим местом".
Появится форма со списками рабочих мест и исполнителей. Сделайте выбор и подтвердите свое намерение кликнув по кнопке "Создать".
Если за рабочим местом уже был закреплен другой пользователь, то старый пользователь открепляется и происходит закрепление нового пользователя за выбранным рабочим местом.
Закрепляются только те исполнители, которые имеют роль "Продавец".<p />

<h2>17.10. Снятие блокировки с рабочей смены</h2>
Войдите в систему пользователем, который был создан на шаге <b>17.5</b> и у которого включены флаги <b>Активен</b> и <b>Бухгалтер</b>. Перейдите на страницу по ссылке<p />
@Html.ActionLink(Resources.BranchSpell_INDEX, "Index", "BranchSpell", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })<p />
<b>Для снятия блокировки с текущей смены</b> необходимо перейти на форму по ссылке выше.
Далее кликнуть по ссылке подробно. На появившейся форме кликнуть кнопку разблокировать.<br />

<h2>17.11. Закрытие рабочей смены</h2>
Закрыть текущую смену можно, если она находится в заблокированном состоянии.
Войдите в систему пользователем, который был создан на шаге <b>17.5</b> и у которого включены флаги <b>Активен</b> и <b>Бухгалтер</b>. Перейдите на страницу по ссылке<p />
@Html.ActionLink(Resources.BranchSpell_INDEX, "Index", "BranchSpell", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })<p />
Для <b>блокировки</b> текущей смены необходимо перейти на форму по ссылке выше. Далее кликнуть по ссылке подробно. На появившейся форме кликнуть кнопку заблокировать.<br />
Для <b>закрытия</b> текущей смены необходимо перейти на форму по ссылке выше. Далее кликнуть по ссылке подробно. На появившейся форме кликнуть кнопку закрыть.<br />

<h2>17.12. Списание остатков</h2>
В данном решении реализован функционал <b>отложенного закрытия смены</b>:<br />

Действия описанные выше манипулируют парой флагов (открыта,блокирована). Но этого недостаточно с точки зрения ведения ведомостей переоценки.
Напомним, что решение манипулирует тремя ресурсами: приход, остатки, расход. Когда продавец проводит продажу происходит списание с остатков и только.
В то время как приходные ведомости остаются нетронутыми. Чтобы ведомости переоценки велись корректно необходимо списывать с прихода также.
Операция списания с прихода достаточно медленная и исполняется после закрытия смены, когда сторнирование продаж запрещено.
С другой стороны во время списания с прихода могут возникнуть ошибки, которые необходимо анализировать и может быть вносить исправления в картотеки и запускать
процесс списания с прихода повторно. Коротко говоря, закрытие смены в любой учетной системе - это праздник, который может растянуться на часы а то и дни.
С другой стороны наступил новый день и необходимо начинать продажи, а стало быть открывать новую смену и стало быть старая смена должна быть закрыта.
Тут то и понадобится отложенное закрытие смены. Массовый процесс отложенного закрытия смены запускается через историю ранее открытых смен.
Выше мы постарались показать причины по которым пришлось реализовать такого рода функционал.<br />
Войдите в систему пользователем, который был создан на шаге <b>17.5</b> и у которого включены флаги <b>Активен</b> и <b>Бухгалтер</b>. Перейдите на страницу по ссылке<p />
@Html.ActionLink(Resources.BranchSpellHstTDES_INDEX, "Index", "BranchSpellHst", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" }) <p />
Используя фильт по датам найдите смену, по которой не проводилось списание с прихода (ваша последняя закрытая смена, к примеру).
Перейдите по ссылке <b>Подробно</b> и кликните на кнопке <b>Списать с прихода</b>.
Данная кнопка не запускает процесс списания, но открывает форму <b>Списать с прихода</b>.
Именно на этой форме вы запустите массовый процесс списания кликнув по аналогичной кнопке <b>Списать с прихода</b>.<br />
На первый взгляд может показаться излишним сначала открыть форму и только тогда запустить процесс.
Но любая важная операция выполняется через шаг - показать форму и только тогда активировать функцию.
(Хорошим примером важности такого подхода является операция удаления - будет показана дополнительная форма с вопросом "Вы уверены ?" и кнопкой "Удалить").<p />

<h2>17.13. Настройка репликаций данных в стол заказов в интернет</h2>
Войдите в систему пользователем, который был создан на шаге <b>17.5</b> и у которого включены флаги <b>Активен</b> и <b>Администратор</b>. Перейдите на страницу по ссылке<p />
@Html.ActionLink(Resources.EnterpriseBranchReplyTDES_INDEX, "Index", "EnterpriseBranchReply", new { }, new { @class = "btn btn-info btn-xs" })<p />
На этой странице вы должны добавить четыре записи @Html.ActionLink("по типам репликцируемых данных:", "Index", "Help", new { }, new { }):<br />
Остатки - сервис BranchRestSvc<br />
Профили - сервис BranchProfileSvc<br />
Заказы - сервис BranchOrderSvc<br />
Товары - сервис BranchOrderArticle<p />


Порядок настройки репликаций следующий<br />
Администратор <b>сайта в интернет</b>
<ul>
    <li>регистрирует ваше предприятие и подразделение (двухуровневая инфраструктура). </li>
    <li>регистрирует штат вашего подразделения </li>
    <li>передает вам <b>внешнюю учетную запись (и пароль).</b> </li>
</ul>
Через переданную вам учетную запись вы будете реплицировать данные на <b>внешний сайт</b>
или используя web-интерфейс <b>интернет сайта</b> редактировать рукми опубликованные остатки вашего подразделения.<br />

Важно понимать, что <b>внешняя учетная запись</b> - это учетная запись для входа на внешний сайт, но не учетная запись для входа в ваше локальное решение.
Передача данных из вашего локального решения на <b>внешний сайт</b> проводится с использованием WebApi сервисов реализованных на внейшем сайте.

@Html.ActionLink("Спецификацию по реализованному WebApi интерфейсу можно получить перейдя по этой ссылке.", "Index", "Help", new { }, new { })
В рамках спецификации сервис <b>api/BranchLogInSvc</b> используется для входа на <b>внешний сайт</b>. И сервис <b>api/BranchRestSvc</b> используется для выполнения репликации.
Кроме указания точек доступа к сервисам необходимо указать сам внешний сайт. Url внешнего сайта вносится а поле <b>Http адрес</b>. Внешняя учетная запись вносится в поля
<b>пользователь</b> и <b>пароль</b>. Кликните по ссылке <b>создать</b> для внесения настроек репликации. Ссылка <b>создать</b>
доступна ролям администраторов предприятия и подразделения.



<h2>17.14. Репликация данных в стол заказов в интернет</h2>
Чтобы заказы сформированные через интернет стали видны на площадке магазина необходимо выполнить операцию репликации заказзов.<p />
Чтобы остатки и цены стали доступны покупателям через интернет необходимо выполнить операцию репликации остатков.<p />
Войдите в систему пользователем, который был создан на шаге <b>17.5</b> и у которого включены флаги <b>Активен</b> и <b>Бухгалтер</b> (или <b>Продавец</b>).
Перейдите на страницу по ссылке<p />
@Html.ActionLink(Resources.MakeOrderReply, "DoMakeOrdersReply", "EnterpriseBranches", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })<p />
Появится форма позволяющая запустить процес получения заказов из интернет в локальную базу данных.<br />
Перейдите на страницу по ссылке<p />
@Html.ActionLink(Resources.MakeBranchReply, "DoMakeReply", "EnterpriseBranches", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })<p />
Появится форма позволяющая запустить процес передачи ненулевых остатков и цен из локальную базу данных в базу данных в интернет.<br />
Заметим, что при репликации заказов и остатков осуществляется передача не всего массива данных, но лишь той части, которая претерпела изменение или была добавлена.

<h2>17.15. Артикулы и брэнды торговой сети (предприятия)</h2>
Каталог артикулов предприятия формируется с помощью утилиты WpfCarShop.exe и описано это в статье<p />
7. @Html.ActionLink("Наполнение каталога артикулов вашей торговой сети", "CarShopArticleContext", "HowTo", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })<br />
Тем не менее возникает <b>две проблемы</b>: <br />
1. Нумерация некоторых товаров вашего магазина не совпадает с нумерацией товаров TecDoc.<br />
2. Вы торгуете некоторым товаром, который отсутствует в каталоге TecDoc.<br />
К примеру, разного рода наждачная бумага, болончики с краской, грунтовки не будут входить в каталог TecDoc.<p />

Чтобы учетная система смогла работать необходимо внести руками недостающие артикулы. Заметим, что за каждым товаром в обязательном порядке закрепляется Брэнд.
Если описание Брэнда отсутствует, то вы не сможете создать запись артикула товара. Поэтому после автоматического формирования каталога товаров с помощью утилиты WpfCarShop.exe
его придется подредактировать под ваши нужды.<br />
Войдите в систему пользователем, который был создан на шаге <b>17.2</b> и у которого включены флаги <b>Активен</b> и <b>Администратор</b>. Перейдите на страницу по ссылке<p />
@Html.ActionLink(Resources.EnterpriseBrand_INDEX, "Index", "EnterpriseBrand", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })<p />
Брэнды товаров, которыми торгует ваше предприятие. Внесите те брэнды, которых не хватает в вашем каталоге<p />

Войдите в систему пользователем, который был создан на шаге <b>17.2</b> и у которого включены флаги <b>Активен</b> и <b>Администратор</b>. Перейдите на страницу по ссылке<p />
@Html.ActionLink(Resources.EnterpriseArticle_INDEX, "Index", "EnterpriseArticle2", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })<p />
Артикулы товаров, которыми торгует ваше предприятиею. Описание каждого артикула состоит из двух пар. Первая пара (Id, Брэнд)- это нумерация,
которую закрепило ваше предприятие за наименованием товара. Вторая пара (Id, Брэнд) - это нумерация, которая ведется в TecDoc (т.е. то, что написано на упаковке).
Как правило, эти пары (ваш нумератор и нумератор TecDoc) должны совпадать. Но если предприятие работает давно и так сложилось, что была заведена своя собственная нумерация.
При отсутствии такого ресурса в учетной системе, предприятия со своей собственной нумерацией товаров не смогут воспользоваться данным решением.
Другими словами, наличие данного ресурса позволяет предприятию вести свою собственную нумерацию, но при обслуживании клиентов использовать нумерацию TecDoc.
Покупателю понятны слова (B31991-00, GLASER), т.к. это он найдет на упаковке товара "Комплекта прокладок, блок-картер двигателя".
На этой же упаковке он найдет европейский штрих-код=8429020262113. Все это отнисится к нумерации TecDoc. <br />
Вторая причина по которой ведется такой ресурс - это то, что в каталоге TecDoc отсутствует описание товара, которым торгует ваш магазин. Если нумерация TecDoc для товара отсутствует,
то продублируйте поля TecDoc (вторую пару Id, Брэнд) значениями полей нумерации, которую закрепило ваше предприятие за наименованием товара (т.е. первой парой Id, Брэнд)
и сохраните запись. Поле Штрих-Кода является необязательным к заполнению. Его можно оставить пустым.

