@using PagedList.Mvc;
@using CarShop.Properties;

@model PagedList.IPagedList<TecDocEcoSystemDbClassLibrary.IncomeArticleTDES>

@{
    ViewBag.Title = Resources.IncomeArticleTDES_INDEX;
    Guid? SearchEntGuid = ViewBag.SearchEntGuid;
    String EntDescription = ViewBag.EntDescription as String;
    Guid? SearchEntBranchGuid = ViewBag.SearchEntBranchGuid;
    String EntBranchDescription = ViewBag.EntBranchDescription as String;

    Guid? SearchIncomePayRollTDESGuid = ViewBag.searchIncomePayRollTDESGuid;
    String SearchIncomePayRollDescr = ViewBag.searchIncomePayRollDescr;
    TecDocEcoSystemDbClassLibrary.IncomePayRollTDES incomepayrolltdes = ViewBag.searchIncomePayRoll;
}

<div class="panel panel-info" hidden>
    <div class="panel-heading">@ViewBag.Title</div>
    <div class="panel-body">
        Перейдите по ссылке для получения более детальной информации
        @Html.ActionLink("Приход на магазин", "Income", "ByTasks", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })
    </div>
</div>

<h2>@Resources.IncomeArticleTDES_INDEX</h2>

<ol class="breadcrumb">
    <li>@Html.ActionLink(Resources.EnterpriseTDES_INDEX, "Index", "Enterprises")</li>
    @if (SearchEntGuid.HasValue)
    {

        <li>@Html.ActionLink(EntDescription, "Details", "Enterprises", new { id = SearchEntGuid }, new { })</li>
        <li>@Html.ActionLink(Resources.Branch_INDEX, "Index", "EnterpriseBranches", new { searchEntGuid = SearchEntGuid }, new { }) </li>

        if (SearchEntBranchGuid.HasValue)
        {
            <li>@Html.ActionLink(EntBranchDescription, "Details", "EnterpriseBranches", new { id = SearchEntBranchGuid }, new { })</li>
            <li>@Html.ActionLink(Resources.IncomePayRollTDES_INDEX, "Index", "IncomePayRoll", new { searchEntGuid = SearchEntGuid, searchEntBranchGuid = SearchEntBranchGuid }, new { })</li>
            if (SearchIncomePayRollTDESGuid.HasValue)
            {
                <li>@Html.ActionLink(SearchIncomePayRollDescr, "Details", "IncomePayRoll", new { searchEntGuid = SearchEntGuid, searchEntBranchGuid = SearchEntBranchGuid, id = SearchIncomePayRollTDESGuid }, new {  })</li>
            }
        }
    }
</ol>

@Html.ValidationSummary(true)

@if (  SearchIncomePayRollTDESGuid.HasValue )
{

<p>
    @Html.ActionLink(Resources.CREATENEW_ACTION, "Create", "IncomeArticle", new { searchEntGuid = SearchEntGuid, searchEntBranchGuid = SearchEntBranchGuid, searchIncomePayRollTDESGuid = SearchIncomePayRollTDESGuid }, new { @class = "btn btn-primary" })
    @if (incomepayrolltdes != null)
    {
        @Html.ActionLink(Resources.CreateSheetRevaluation, "SheetRevaluation", "IncomePayRoll", new { Id = incomepayrolltdes.IncomePayRollTDESGuid, searchEntGuid = SearchEntGuid, searchEntBranchGuid = SearchEntBranchGuid }, new { @class = "btn btn-primary" })
        @Html.ActionLink(Resources.MakeIncome_INDEX, "MakeIncome", "IncomePayRoll", new { Id = incomepayrolltdes.IncomePayRollTDESGuid, searchEntGuid = SearchEntGuid, searchEntBranchGuid = SearchEntBranchGuid }, new { @class = "btn btn-primary" })
        @Html.ActionLink(Resources.ReverseIncome_INDEX, "ReverseIncome", "IncomePayRoll", new { Id = incomepayrolltdes.IncomePayRollTDESGuid, searchEntGuid = SearchEntGuid, searchEntBranchGuid = SearchEntBranchGuid }, new { @class = "btn btn-danger" })

    }

    <input type="button" class="btn btn-info" onclick="$('tr.warning').each(function () { if ($(this).is(':hidden')) $(this).show(); else $(this).hide(); })" value="@Resources.ShowHideBtn" />
</p>


    var dummy = Model.FirstOrDefault();


    <table class="table table-condensed">
        <tr>
            <th>
                @Html.DisplayNameFor(model => dummy.SupArticle)
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.SupBrandNic)
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.IsProcessed)
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.IsReversed)
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.IsRevaluate)
            </th>

            <th class="hidden-xs hidden-sm"></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.SupArticle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SupBrandNic)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsProcessed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsReversed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsRevaluate)
                </td>

                <td class="hidden-xs hidden-sm btn-group btn-group-xs">
                    @Html.ActionLink(Resources.EDIT_ACTION, "Edit", new { SupArticle = item.SupArticle, SupBrandNic = item.SupBrandNic, searchEntGuid = SearchEntGuid, searchEntBranchGuid = SearchEntBranchGuid, searchIncomePayRollTDESGuid = SearchIncomePayRollTDESGuid }, new { @class = "btn btn-primary" })
                    @Html.ActionLink(Resources.DETAILS_ACTION, "Details", new { SupArticle = item.SupArticle, SupBrandNic = item.SupBrandNic, searchEntGuid = SearchEntGuid, searchEntBranchGuid = SearchEntBranchGuid, searchIncomePayRollTDESGuid = SearchIncomePayRollTDESGuid }, new { @class = "btn btn-info" })
                    @Html.ActionLink(Resources.DELETE_ACTION, "Delete", new { SupArticle = item.SupArticle, SupBrandNic = item.SupBrandNic, searchEntGuid = SearchEntGuid, searchEntBranchGuid = SearchEntBranchGuid, searchIncomePayRollTDESGuid = SearchIncomePayRollTDESGuid }, new { @class = "btn btn-danger" })
                </td>
            </tr>

            <tr class="warning">
                <td colspan="2">
                    <dl class="dl-horizontal">
                        <dt class="alert-info">
                            @Html.DisplayNameFor(model => dummy.ArtAmount)
                        </dt>
                        <dd class="alert-info">
                            @Html.DisplayFor(model => item.ArtAmount)
                        </dd>

                        <dt class="alert-success">
                            @Html.DisplayNameFor(model => dummy.ArtAmountRest)
                        </dt>
                        <dd class="alert-success">
                            @Html.DisplayFor(model => item.ArtAmountRest)
                        </dd>

                        <dt class="alert-info">
                            @Html.DisplayNameFor(model => dummy.PurchasePrice)
                        </dt>
                        <dd class="alert-info">
                            @Html.DisplayFor(model => item.PurchasePrice)
                        </dd>


                        <dt>
                            @Html.DisplayNameFor(model => dummy.ArtPrice)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => item.ArtPrice)
                        </dd>


                        <dt class="alert-success">
                            @Html.DisplayNameFor(model => dummy.CurrArtPrice)
                        </dt>
                        <dd class="alert-success">
                            @Html.DisplayFor(model => item.CurrArtPrice)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => dummy.EntArticle)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => item.EntArticle)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => dummy.EntBrandNic)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => item.EntBrandNic)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => dummy.EntArticleDescription)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => item.EntArticleDescription)
                        </dd>
                        @if (!string.IsNullOrEmpty(item.Comments))
                        {

                        <dt>
                            @Html.DisplayNameFor(model => dummy.Comments)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => item.Comments)
                        </dd>
                        }

                    </dl>
                </td>
            </tr>

            <tr class="visible-xs visible-sm active">
                <td colspan="2" class="btn-group btn-group-xs">
                    @Html.ActionLink(Resources.EDIT_ACTION, "Edit", new { SupArticle = item.SupArticle, SupBrandNic = item.SupBrandNic, searchEntGuid = SearchEntGuid, searchEntBranchGuid = SearchEntBranchGuid, searchIncomePayRollTDESGuid = SearchIncomePayRollTDESGuid }, new { @class = "btn btn-primary" })
                    @Html.ActionLink(Resources.DETAILS_ACTION, "Details", new { SupArticle = item.SupArticle, SupBrandNic = item.SupBrandNic, searchEntGuid = SearchEntGuid, searchEntBranchGuid = SearchEntBranchGuid, searchIncomePayRollTDESGuid = SearchIncomePayRollTDESGuid }, new { @class = "btn btn-info" })
                    @Html.ActionLink(Resources.DELETE_ACTION, "Delete", new { SupArticle = item.SupArticle, SupBrandNic = item.SupBrandNic, searchEntGuid = SearchEntGuid, searchEntBranchGuid = SearchEntBranchGuid, searchIncomePayRollTDESGuid = SearchIncomePayRollTDESGuid }, new { @class = "btn btn-danger" })
                </td>
            </tr>

        }

    </table>

@Html.PagedListPager( Model, page => Url.Action("Index", new { searchEntGuid=SearchEntGuid, searchEntBranchGuid=SearchEntBranchGuid, searchIncomePayRollTDESGuid=SearchIncomePayRollTDESGuid, page=page  }), PagedListRenderOptions.OnlyShowFivePagesAtATime  )
@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @Resources.PAGE_OF  @Model.PageCount
    
    
}    