@using CarShop.Properties;
@using PagedList.Mvc;
@using TecDocEcoSystemDbClassLibrary;
@using Newtonsoft.Json;

@model PagedList.IPagedList<TecDocEcoSystemDbClassLibrary.EnterpriseBrandTDES>
@{
    ViewBag.Title = Resources.EnterpriseBrand_INDEX;
    Guid? SearchEntGuid = ViewBag.SearchEntGuid;
    String EntDescription = ViewBag.EntDescription as String;
    SelectList sliSearchStringBy = ViewBag.sliSearchStringBy;

    String RedirecData = ViewBag.RedirecData;
    String RedirectContriller = ViewBag.RedirectContriller;
    String RedirectAction = ViewBag.RedirectAction;
}

<h2>@Resources.EnterpriseBrand_INDEX</h2>

@if (!SearchEntGuid.HasValue)
{
    @Html.ValidationSummary(true)
}
else
{


    using (Html.BeginForm("LookUpEnterpriseBrand", "EnterpriseBrand", FormMethod.Get, new { @class = "form-inline", role = "form" }))
    {
    @Html.Hidden("searchEntGuid", SearchEntGuid)
    @Html.Hidden("redirecData",  RedirecData)
    @Html.Hidden("redirectContriller", RedirectContriller)
    @Html.Hidden("redirectAction", RedirectAction)
        
        
        
        <h3>@Resources.FILTER_TITLE</h3>
        <div class="form-group">
            @Html.DropDownList("searchStringBy", sliSearchStringBy, new
           {
               @class = "form-control",
               data_autocomplete_selector = "data-autocomplete-url",
               sel1 = Url.Action("Autocomplete", new { currentIsActive = "1", searchEntGuid = SearchEntGuid }),
               sel2 = Url.Action("Autocomplete", new { currentIsActive = "2", searchEntGuid = SearchEntGuid })
           })
        </div>
        <div class="form-group">
            @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new
           {
               @class = "form-control",
               data_autocomplete_url = Url.Action("Autocomplete", new { currentFilterBy = ViewBag.currentFilterBy, searchEntGuid = SearchEntGuid })
           })
        </div>

        <input type="submit" value="@Resources.SEARCH_ACTION" class="btn btn-info" />
    }
    
using (Html.BeginForm("LookUpEnterpriseBrandSelected", "EnterpriseBrand", FormMethod.Post))
{

    @Html.Hidden("redirecData",  RedirecData)
    @Html.Hidden("redirectContriller", RedirectContriller)
    @Html.Hidden("redirectAction", RedirectAction)


    if ((Model != null) && (Model.Count > 0))
    {

        <input type="submit" value="@Resources.DOSELECT_TITLE" name="DOSELECT_TITLE" class="btn btn-success" />
    }
    <input type="submit" value="@Resources.DOCANCEL_TITLE" name="DOCANCEL_TITLE" class="btn btn-default" />


    var dummy = Model.FirstOrDefault();


<table class="table table-condensed">
    <tr>
        <th>
        </th>
        <th>
            @Html.DisplayNameFor(model => dummy.EntBrandNic)
        </th>
        <th>
            @Html.DisplayNameFor(model => dummy.EntBrandDescription)
        </th>
    </tr>

@{
    var selected = true;
    //System.Web.Script.Serialization.JavaScriptSerializer serializer = new System.Web.Script.Serialization.JavaScriptSerializer();

}

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.RadioButton("SimpleArticle", JsonConvert.SerializeObject(new EnterpriseBrandTDES() { EntBrandNic = item.EntBrandNic, EntBrandDescription = item.EntBrandDescription, EntGuid = item.EntGuid }), selected, selected)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EntBrandDescription)
        </td>
    </tr>
    selected = false;
}

</table>

    if ((Model != null) && (Model.Count > 0))
    {

        <input type="submit" value="@Resources.DOSELECT_TITLE" name="DOSELECT_TITLE" class="btn btn-success" />
    }
    <input type="submit" value="@Resources.DOCANCEL_TITLE" name="DOCANCEL_TITLE" />    
}    

@Html.PagedListPager( Model, page => Url.Action("LookUpEnterpriseBrand", new { redirecData=RedirecData, redirectContriller=RedirectContriller, redirectAction=RedirectAction, searchEntGuid=SearchEntGuid, currentFilter=ViewBag.CurrentFilter, currentFilterBy=ViewBag.currentFilterBy, page=page  }), PagedListRenderOptions.OnlyShowFivePagesAtATime  )
@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @Resources.PAGE_OF  @Model.PageCount

@section Scripts {
    @Scripts.Render("~/bundles/autocomplete")
}
    
        
}    