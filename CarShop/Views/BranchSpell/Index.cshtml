@using CarShop.Properties;
@model IEnumerable<TecDocEcoSystemDbClassLibrary.BranchSpellTDES>

@{
    ViewBag.Title = Resources.BranchSpell_INDEX;
    Guid? SearchEntGuid = ViewBag.SearchEntGuid;
    String EntDescription = ViewBag.EntDescription as String;
    Guid? SearchEntBranchGuid = ViewBag.SearchEntBranchGuid;
    String EntBranchDescription = ViewBag.EntBranchDescription as String;
}

<div class="panel panel-info" hidden>
    <div class="panel-heading">@ViewBag.Title</div>
    <div class="panel-body">
        Изменять состояние смены может исполнитель с <b>правами администратора подразделения или бухгалтера</b>.<br />
        Смена <b>открывается в заблокированном состоянии</b>. Перед разблокировкой необходимо закрепить исполнителей за рабочими местами.
        Операция закрепления выполняется на странице <b>Пользователь на рабоч.месте</b><br />

        Открыть новую смену можно, если текущая смена или отсутствует или закрыта. Закрыть текущую смену можно, если она находится в заблокированном состоянии.<br />
        Чтобы <b>открыть смену</b> необходимо кликнуть на ссылку "Открыть новую смену". На появившейся форме отредактировать дату (если это надо) и
        подтвердить намерение кликнув по кнопке "Открыть новую смену". <br />

        Для <b>снятия блокировки</b> с текущей смены необходимо  кликнуть по ссылке <b>подробно</b>. На появившейся форме кликнуть кнопку разблокировать.<br />
        Для <b>блокировки текущей</b> смены необходимо  кликнуть по ссылке <b>подробно</b>. На появившейся форме кликнуть кнопку заблокировать.<br />
        Для <b>закрытия текущей смены</b> необходимо  кликнуть по ссылке <b>подробно</b>. На появившейся форме кликнуть кнопку закрыть.<p />

        Напомним, что в данном решении реализован <b>функционал отложенного закрытия смены:</b><br />
        После закрытия смены необходимо перейти на страницу <b>История смен</b> и кликнуть по ссылке <b>подробно</b> для вашей закрытой смены.
        На появившейся странице кликните на кнопке "Списать с прихода".
        Действия открытия,закрытия и блокировки манипулируют парой флагов (открыта,блокирована).
        Но этого недостаточно с точки зрения ведения ведомостей переоценки. Когда продавец проводит продажу происходит списание с остатков и только.
        В то время как приходные ведомости остаются нетронутыми. Чтобы ведомости переоценки велись корректно необходимо списывать с прихода также.
        Операция списания с прихода достаточно медленная и исполняется после закрытия смены, когда сторнирование продаж запрещено.
        Массовый процесс <b>отложенного закрытия смены запускается через историю ранее открытых смен.</b><br />
        Разрешено открывать новую смену и проводить продажи <b>до выполнения операции списания с прихода</b>. Но нельзя проводить переоценку,
        если остались смены для которых не выло выполнено списание с прихода.
        <p />
        Перейдите по ссылке для получения более детальной информации
        @Html.ActionLink("Управление сменой", "BranchSpell", "ByTasks", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })


    </div>
</div>


<h2>@Resources.BranchSpell_INDEX</h2>


<ol class="breadcrumb">
    <li>@Html.ActionLink(Resources.EnterpriseTDES_INDEX, "Index", "Enterprises")</li>
    @if (SearchEntGuid.HasValue)
    {
        <li>@Html.ActionLink(EntDescription, "Details", "Enterprises", new { id = SearchEntGuid }, new { })</li>
        <li>@Html.ActionLink(Resources.Branch_INDEX, "Index", "EnterpriseBranches", new { searchEntGuid = SearchEntGuid }, new { }) </li>

        if (SearchEntBranchGuid.HasValue)
        {
            <li>@Html.ActionLink(EntBranchDescription, "Details", "EnterpriseBranches", new { id = SearchEntBranchGuid }, new { })</li>
        }
    }
</ol>

<div class="alert alert-danger">
    Прежде чем закрыть смену убедитесь, что продавцы не оставили неплаченных корзин продаж и возвратов.
    Если таковые есть, убедитесь, что по этим корзинам действительно не было проплаты или возврата денег.
    <p />
    Для этого перейдите с истории смен. Кликните подробно на вашей незакрытой смене и запустите отчеты
    <ol>
        <li>Неоплаченные за смену продажи</li>
        <li>Непроведенные за смену возвраты</li>
    </ol>
</div>


    @Html.ValidationSummary(true)

    @if (SearchEntBranchGuid.HasValue)
    {

        var dummy = Model.FirstOrDefault();
        if ((dummy != null) && (dummy.IsActive))
        {
            <div class="alert alert-warning">
                @Resources.CreateNewSpellIfCurrentClose <p />
                @Resources.ActiveSpellCannotBeDeleted
            </div>

        }
        else
        {
            if ((ViewBag.IsEcoSystemAdmin) || (ViewBag.IsEnterpriseAdmin) || (ViewBag.IsBranchAdmin) || (ViewBag.IsBranchBooker))
            {
                <p>
                    @Html.ActionLink(Resources.CREATE_NEW_SPELL, "Create", "BranchSpell", new { searchEntGuid = SearchEntGuid, searchEntBranchGuid = SearchEntBranchGuid }, new { @class = "btn btn-primary" })
                </p>
            }
        }

        <input type="button" class="btn btn-info visible-xs visible-sm" onclick="$('tr.warning').each(function () { if ($(this).is(':hidden')) $(this).show(); else $(this).hide(); })" value="@Resources.ShowHideBtn" />


        <table class="table table-condensed">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.SpellGuid)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsActive)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsBlocked)
                </th>
                <th class="hidden-xs hidden-sm">
                    @Html.DisplayNameFor(model => model.OpenAt)
                </th>
                <th class="hidden-xs hidden-sm">
                    @Html.DisplayNameFor(model => model.CloseAt)
                </th>
                <th class="hidden-xs hidden-sm">
                    @Html.DisplayNameFor(model => model.OpenedBy)
                </th>
                <th class="hidden-xs hidden-sm"></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.SpellGuid)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsActive)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsBlocked)
                    </td>
                    <td class="hidden-xs hidden-sm">
                        @Html.DisplayFor(modelItem => item.OpenAt)
                    </td>
                    <td class="hidden-xs hidden-sm">
                        @Html.DisplayFor(modelItem => item.CloseAt)
                    </td>
                    <td class="hidden-xs hidden-sm">
                        @Html.DisplayFor(modelItem => item.OpenedBy)
                    </td>
                    <td class="hidden-xs hidden-sm btn-group btn-group-xs">
                        @if ((ViewBag.IsEcoSystemAdmin) || (ViewBag.IsEnterpriseAdmin) || (ViewBag.IsBranchAdmin) || (ViewBag.IsBranchBooker))
                        {
                            @Html.ActionLink(Resources.EDIT_ACTION, "Edit", new { id = item.EntBranchGuid }, new { @class = "btn btn-primary" })
                        }

                        @Html.ActionLink(Resources.DETAILS_ACTION, "Details", new { id = item.EntBranchGuid }, new { @class = "btn btn-info" })

                        @if ((item != null) && (item.IsActive))
                        {

                        }
                        else
                        {
                            if ((ViewBag.IsEcoSystemAdmin) || (ViewBag.IsEnterpriseAdmin) || (ViewBag.IsBranchAdmin) || (ViewBag.IsBranchBooker))
                            {
                                @Html.ActionLink(Resources.DELETE_ACTION, "Delete", new { id = item.EntBranchGuid }, new { @class = "btn btn-danger" })
                            }
                        }
                    </td>
                </tr>
                
                <tr class="warning">
                    <td colspan="2" class=" visible-xs visible-sm">
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.OpenAt)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => item.OpenAt)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.CloseAt)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => item.CloseAt)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.OpenedBy)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => item.OpenedBy)
                            </dd>
                        </dl>
                    </td>
                </tr>

                <tr class="visible-xs visible-sm active">
                    <td colspan="2" class="btn-group btn-group-xs">
                        @if ((ViewBag.IsEcoSystemAdmin) || (ViewBag.IsEnterpriseAdmin) || (ViewBag.IsBranchAdmin) || (ViewBag.IsBranchBooker))
                        {
                            @Html.ActionLink(Resources.EDIT_ACTION, "Edit", new { id = item.EntBranchGuid }, new { @class = "btn btn-primary" })
                        }

                        @Html.ActionLink(Resources.DETAILS_ACTION, "Details", new { id = item.EntBranchGuid }, new { @class = "btn btn-info" })

                        @if ((item != null) && (item.IsActive))
                        {

                        }
                        else
                        {
                            if ((ViewBag.IsEcoSystemAdmin) || (ViewBag.IsEnterpriseAdmin) || (ViewBag.IsBranchAdmin) || (ViewBag.IsBranchBooker))
                            {
                                @Html.ActionLink(Resources.DELETE_ACTION, "Delete", new { id = item.EntBranchGuid }, new { @class = "btn btn-danger" })
                            }
                        }
                    </td>
                </tr>

            }

        </table>

    }
