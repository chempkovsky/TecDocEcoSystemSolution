@using PagedList.Mvc;
@using CarShop.Properties;

@model PagedList.IPagedList<TecDocEcoSystemDbClassLibrary.EnterpriseSupplierTDES>

@{
    ViewBag.Title = Resources.EnterpriseSupplier_INDEX;
    Guid? SearchEntGuid = ViewBag.SearchEntGuid;
    String EntDescription = ViewBag.EntDescription as String;

    SelectList sliIsActive = ViewBag.sliIsActive as SelectList;
    SelectList sliSearchStringBy = ViewBag.sliSearchStringBy as SelectList;

}

<div class="panel panel-info" hidden>
    <div class="panel-heading">@ViewBag.Title</div>
    <div class="panel-body">
        @Resources.EnterpriseSupplierHelp1<br/>
        Перейдите по ссылке для получения более детальной информации
        @Html.ActionLink("Приход на магазин", "Income", "ByTasks", routeValues: null, htmlAttributes: new { @class = "btn btn-info btn-xs" })
    </div>
</div>



<h2>@Resources.EnterpriseSupplier_INDEX</h2>

<ol class="breadcrumb">
    <li>@Html.ActionLink(Resources.EnterpriseTDES_INDEX, "Index", "Enterprises")</li>
    @if (SearchEntGuid.HasValue)
    {
        <li>@Html.ActionLink(EntDescription, "Details", "Enterprises", new { id = SearchEntGuid }, new { })</li>
    }
</ol>



@Html.ValidationSummary(true)

@if (SearchEntGuid.HasValue)
{

if ( (ViewBag.IsEcoSystemAdmin)  || (ViewBag.IsEnterpriseAdmin)) {
    <p>
        @Html.ActionLink(Resources.CREATENEW_ACTION, "Create", routeValues: new { searchEntGuid = SearchEntGuid }, htmlAttributes:new { @class = "btn btn-primary" })
    </p>
}



using (Html.BeginForm("Index", "EnterpriseSupplier", FormMethod.Get,  new { @class = "form-inline", role = "form" }))
{
    <h3>@Resources.FILTER_TITLE</h3>
    @Html.Hidden("searchEntGuid", SearchEntGuid)
    <div class="form-group">
    @Resources.FILTER_ISACTIVE     
    </div>
    <div class="form-group">
    @Html.DropDownList("showIsActive", sliIsActive, new {
                        @class = "form-control",
                        data_autocomplete_selector = "data-autocomplete-url", 
                        sel1 = Url.Action("Autocomplete", new {currentIsActive="1", searchEntGuid = SearchEntGuid }), 
                        sel2 = Url.Action("Autocomplete", new { currentIsActive="2", searchEntGuid = SearchEntGuid }), 
                        sel3 = Url.Action("Autocomplete", new { currentIsActive="3", searchEntGuid = SearchEntGuid }) })
    </div>
    <div class="form-group">
    @Html.DropDownList("searchStringBy", sliSearchStringBy, new
                    {
                        @class = "form-control",
                        data_autocomplete_selector = "data-autocomplete-url", 
                        sel1 = Url.Action("Autocomplete", new {currentFilterBy="1", searchEntGuid = SearchEntGuid }), 
                        sel2 = Url.Action("Autocomplete", new { currentFilterBy="2", searchEntGuid = SearchEntGuid }) })
    </div>
    <div class="form-group">
    @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new
                    {
                        @class = "form-control",
                        data_autocomplete_url = Url.Action("Autocomplete", new { currentIsActive=ViewBag.CurrentIsActive, currentFilterBy=ViewBag.currentFilterBy, searchEntGuid = SearchEntGuid }) })
    </div>
    <input type="submit" value="@Resources.SEARCH_ACTION" class="btn btn-info" />
}


var dummy = Model.FirstOrDefault();


<table class="table table-condensed">
    <tr>
        <th>
            @Html.DisplayNameFor(model => dummy.EntSupplierId)
        </th>
        <th>
            @Html.DisplayNameFor(model => dummy.EntSupplierDescription)
        </th>
        <th>
            @Html.DisplayNameFor(model => dummy.IsActive)
        </th>
        <th class="hidden-xs"></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EntSupplierId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EntSupplierDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsActive)
            </td>
            <td class="hidden-xs btn-group btn-group-xs">
                @if ( (ViewBag.IsEcoSystemAdmin)  || (ViewBag.IsEnterpriseAdmin)) {
                    @Html.ActionLink(Resources.EDIT_ACTION, "Edit", new { id = item.EntSupplierId, searchEntGuid = ViewBag.SearchEntGuid }, new { @class = "btn btn-primary" })
                }
                @Html.ActionLink(Resources.DETAILS_ACTION, "Details", new {  id=item.EntSupplierId, searchEntGuid=ViewBag.SearchEntGuid }, new { @class = "btn btn-info" })
                @if ( (ViewBag.IsEcoSystemAdmin)  || (ViewBag.IsEnterpriseAdmin)) {
                    @Html.ActionLink(Resources.DELETE_ACTION,  "Delete",  new {  id=item.EntSupplierId, searchEntGuid=ViewBag.SearchEntGuid  }, new { @class = "btn btn-danger" })
                }
            </td>
        </tr>
        
            <tr class="visible-xs active">
                <td colspan="3" class="btn-group btn-group-xs">
                    @if ( (ViewBag.IsEcoSystemAdmin)  || (ViewBag.IsEnterpriseAdmin)) {
                        @Html.ActionLink(Resources.EDIT_ACTION, "Edit", new { id = item.EntSupplierId, searchEntGuid = ViewBag.SearchEntGuid }, new { @class = "btn btn-primary" })
                }
                    @Html.ActionLink(Resources.DETAILS_ACTION, "Details", new {  id=item.EntSupplierId, searchEntGuid=ViewBag.SearchEntGuid }, new { @class = "btn btn-info" })
                    @if ( (ViewBag.IsEcoSystemAdmin)  || (ViewBag.IsEnterpriseAdmin)) {
                        @Html.ActionLink(Resources.DELETE_ACTION,  "Delete",  new {  id=item.EntSupplierId, searchEntGuid=ViewBag.SearchEntGuid  }, new { @class = "btn btn-danger" })
                }


        
        
                </td>
            </tr>
        
    }

</table>

@Html.PagedListPager( Model, page => Url.Action("Index", new { searchEntGuid=SearchEntGuid, currentFilter=ViewBag.CurrentFilter, currentFilterBy=ViewBag.currentFilterBy,currentIsActive=ViewBag.CurrentIsActive, page=page  }), PagedListRenderOptions.OnlyShowFivePagesAtATime  )
@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @Resources.PAGE_OF  @Model.PageCount

@section Scripts {
    @Scripts.Render("~/bundles/autocomplete")
}
    
    
}        