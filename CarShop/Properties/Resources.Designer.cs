//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarShop.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CarShop.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Active Spell Cannot Be Deleted.
        /// </summary>
        public static string ActiveSpellCannotBeDeleted {
            get {
                return ResourceManager.GetString("ActiveSpellCannotBeDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Addresses.
        /// </summary>
        public static string Address_INDEX {
            get {
                return ResourceManager.GetString("Address_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Address Types.
        /// </summary>
        public static string AddressType_INDEX {
            get {
                return ResourceManager.GetString("AddressType_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Replicated.
        /// </summary>
        public static string AlreadyReplicated {
            get {
                return ResourceManager.GetString("AlreadyReplicated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ambiguous choice or lack of choice.
        /// </summary>
        public static string AmbiguousChoiceOrLackOfChoice {
            get {
                return ResourceManager.GetString("AmbiguousChoiceOrLackOfChoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Apply Options.
        /// </summary>
        public static string ApplyOptions {
            get {
                return ResourceManager.GetString("ApplyOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rest Amount.
        /// </summary>
        public static string ArtAmountRestSum {
            get {
                return ResourceManager.GetString("ArtAmountRestSum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Amount.
        /// </summary>
        public static string ArtAmountSum {
            get {
                return ResourceManager.GetString("ArtAmountSum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Distribution.
        /// </summary>
        public static string ArtDistrib {
            get {
                return ResourceManager.GetString("ArtDistrib", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch Article.
        /// </summary>
        public static string ArticleSearchByBranch {
            get {
                return ResourceManager.GetString("ArticleSearchByBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search By Brand Nic.
        /// </summary>
        public static string ArticleSearchByBrandNic {
            get {
                return ResourceManager.GetString("ArticleSearchByBrandNic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Article.
        /// </summary>
        public static string ArticleSearchByEntArticle {
            get {
                return ResourceManager.GetString("ArticleSearchByEntArticle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Article Description.
        /// </summary>
        public static string ArticleSearchByEntArticleDescription {
            get {
                return ResourceManager.GetString("ArticleSearchByEntArticleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Extern Article.
        /// </summary>
        public static string ArticleSearchByExternArticle {
            get {
                return ResourceManager.GetString("ArticleSearchByExternArticle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Extern EAN.
        /// </summary>
        public static string ArticleSearchByExternArticleEAN {
            get {
                return ResourceManager.GetString("ArticleSearchByExternArticleEAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Extern Brand Nic.
        /// </summary>
        public static string ArticleSearchByExternBrandNic {
            get {
                return ResourceManager.GetString("ArticleSearchByExternBrandNic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Income Pay Roll.
        /// </summary>
        public static string ArticleSearchByIncomePayRollTDESGuid {
            get {
                return ResourceManager.GetString("ArticleSearchByIncomePayRollTDESGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TecDoc Article.
        /// </summary>
        public static string ArticleSearchByTecDoc {
            get {
                return ResourceManager.GetString("ArticleSearchByTecDoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Price Sum.
        /// </summary>
        public static string ArtPriceSum {
            get {
                return ResourceManager.GetString("ArtPriceSum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Auto Parts.
        /// </summary>
        public static string AutoParts {
            get {
                return ResourceManager.GetString("AutoParts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Website for car owners and sellers of auto parts retail.
        /// </summary>
        public static string AutoPartsMessage {
            get {
                return ResourceManager.GetString("AutoPartsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Back to List.
        /// </summary>
        public static string BACKTOLIST_ACTION {
            get {
                return ResourceManager.GetString("BACKTOLIST_ACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Basket CreateDate Less Than Spell Date.
        /// </summary>
        public static string BasketCreateDateLessThanSpellDate {
            get {
                return ResourceManager.GetString("BasketCreateDateLessThanSpellDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data Basket is not defined.
        /// </summary>
        public static string BasketDefinitionIsNotDefined {
            get {
                return ResourceManager.GetString("BasketDefinitionIsNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на NO.
        /// </summary>
        public static string Boolean_NO {
            get {
                return ResourceManager.GetString("Boolean_NO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на YES.
        /// </summary>
        public static string Boolean_YES {
            get {
                return ResourceManager.GetString("Boolean_YES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branches.
        /// </summary>
        public static string Branch_INDEX {
            get {
                return ResourceManager.GetString("Branch_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Division Administrator role enables users to view data enterprise is bound performer..
        /// </summary>
        public static string BranchAdmin1 {
            get {
                return ResourceManager.GetString("BranchAdmin1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Partially edited (without the right to add or remove) attributes units to whom the administrator is bound.
        /// </summary>
        public static string BranchAdmin2 {
            get {
                return ResourceManager.GetString("BranchAdmin2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на And full control over the data listed below.
        /// </summary>
        public static string BranchAdmin3 {
            get {
                return ResourceManager.GetString("BranchAdmin3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch Administrator.
        /// </summary>
        public static string BranchAdminName {
            get {
                return ResourceManager.GetString("BranchAdminName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Role of the Auditor units allows you to view data enterprise is bound performer..
        /// </summary>
        public static string BranchAudit1 {
            get {
                return ResourceManager.GetString("BranchAudit1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Allows you to view the data unit to which the Executive is bound..
        /// </summary>
        public static string BranchAudit2 {
            get {
                return ResourceManager.GetString("BranchAudit2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch Auditor.
        /// </summary>
        public static string BranchAuditName {
            get {
                return ResourceManager.GetString("BranchAuditName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch Booker (Senior Seller).
        /// </summary>
        public static string BranchBookerName {
            get {
                return ResourceManager.GetString("BranchBookerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Order Profile.
        /// </summary>
        public static string BranchGuestProfileTDES_INDEX {
            get {
                return ResourceManager.GetString("BranchGuestProfileTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Order to store.
        /// </summary>
        public static string BranchOrderTDES_INDEX {
            get {
                return ResourceManager.GetString("BranchOrderTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch rests Catalog.
        /// </summary>
        public static string BranchRest_INDEX {
            get {
                return ResourceManager.GetString("BranchRest_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на BranchRest Detailed selection.
        /// </summary>
        public static string BranchRest_INDEXDetail {
            get {
                return ResourceManager.GetString("BranchRest_INDEXDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Input object is not defined.
        /// </summary>
        public static string BranchRestTDES_NOTDEFINED {
            get {
                return ResourceManager.GetString("BranchRestTDES_NOTDEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Input object is not found in db.
        /// </summary>
        public static string BranchRestTDES_NOTFOUND {
            get {
                return ResourceManager.GetString("BranchRestTDES_NOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch Seller.
        /// </summary>
        public static string BranchSellerName {
            get {
                return ResourceManager.GetString("BranchSellerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current Branch Splell.
        /// </summary>
        public static string BranchSpell_INDEX {
            get {
                return ResourceManager.GetString("BranchSpell_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Spell History.
        /// </summary>
        public static string BranchSpellHstTDES_INDEX {
            get {
                return ResourceManager.GetString("BranchSpellHstTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Less than:.
        /// </summary>
        public static string BranchSpellHstTDES_OpenAtLargeThan {
            get {
                return ResourceManager.GetString("BranchSpellHstTDES_OpenAtLargeThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open Date: Start from:.
        /// </summary>
        public static string BranchSpellHstTDES_OpenAtLessThan {
            get {
                return ResourceManager.GetString("BranchSpellHstTDES_OpenAtLessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Spell.
        /// </summary>
        public static string BranchSpellHstTDES_TITLE {
            get {
                return ResourceManager.GetString("BranchSpellHstTDES_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch Spell Is Blocked Or Is Not Active.
        /// </summary>
        public static string BranchSpellIsBlockedOrIsNotActive {
            get {
                return ResourceManager.GetString("BranchSpellIsBlockedOrIsNotActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Block.
        /// </summary>
        public static string BranchSpellTDES_BLOCK {
            get {
                return ResourceManager.GetString("BranchSpellTDES_BLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Close.
        /// </summary>
        public static string BranchSpellTDES_CLOSE {
            get {
                return ResourceManager.GetString("BranchSpellTDES_CLOSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на When Spell is closed you can open new one and nothing more.
        /// </summary>
        public static string BranchSpellTDES_CLOSED_CANNOTWORK {
            get {
                return ResourceManager.GetString("BranchSpellTDES_CLOSED_CANNOTWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на BranchSpell IS NOT ACTIVE or blocked.
        /// </summary>
        public static string BranchSpellTDES_ISNOTACTIVE {
            get {
                return ResourceManager.GetString("BranchSpellTDES_ISNOTACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на there is no BranchSpell.
        /// </summary>
        public static string BranchSpellTDES_NOTFOUND {
            get {
                return ResourceManager.GetString("BranchSpellTDES_NOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на UnBlock.
        /// </summary>
        public static string BranchSpellTDES_UNBLOCK {
            get {
                return ResourceManager.GetString("BranchSpellTDES_UNBLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can not close spell if it is unblocked.
        /// </summary>
        public static string BranchSpellTDES_UNBLOCKED_CANNOTCLOSE {
            get {
                return ResourceManager.GetString("BranchSpellTDES_UNBLOCKED_CANNOTCLOSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch types.
        /// </summary>
        public static string BranchType_INDEX {
            get {
                return ResourceManager.GetString("BranchType_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branche users.
        /// </summary>
        public static string BranchUser_INDEX {
            get {
                return ResourceManager.GetString("BranchUser_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User has no workPlace yet.
        /// </summary>
        public static string BranchUserHasNoWorkPlace {
            get {
                return ResourceManager.GetString("BranchUserHasNoWorkPlace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User is not Active.
        /// </summary>
        public static string BranchUserNotActive {
            get {
                return ResourceManager.GetString("BranchUserNotActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User not found.
        /// </summary>
        public static string BranchUserNotFound {
            get {
                return ResourceManager.GetString("BranchUserNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User is Not Seller.
        /// </summary>
        public static string BranchUserNotSeller {
            get {
                return ResourceManager.GetString("BranchUserNotSeller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на BRANDS.
        /// </summary>
        public static string BRANDS_INDEX {
            get {
                return ResourceManager.GetString("BRANDS_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search By Desc.
        /// </summary>
        public static string BrandSearchByDesc {
            get {
                return ResourceManager.GetString("BrandSearchByDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search By Nic.
        /// </summary>
        public static string BrandSearchByNic {
            get {
                return ResourceManager.GetString("BrandSearchByNic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search by Supplier Description.
        /// </summary>
        public static string ByEntSupplierDescription {
            get {
                return ResourceManager.GetString("ByEntSupplierDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search by Nic.
        /// </summary>
        public static string ByEntSupplierId {
            get {
                return ResourceManager.GetString("ByEntSupplierId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search by Soato.
        /// </summary>
        public static string BySoatoId {
            get {
                return ResourceManager.GetString("BySoatoId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search by Settlement Name.
        /// </summary>
        public static string BySoatoSettlementName {
            get {
                return ResourceManager.GetString("BySoatoSettlementName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You can change your data only.
        /// </summary>
        public static string CanChangeRecordForYourSelf {
            get {
                return ResourceManager.GetString("CanChangeRecordForYourSelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can not delete after payment.
        /// </summary>
        public static string CanNotDeletePaidBasket {
            get {
                return ResourceManager.GetString("CanNotDeletePaidBasket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can Not Parce DateFrom filter.
        /// </summary>
        public static string CanNotParceDateFrom {
            get {
                return ResourceManager.GetString("CanNotParceDateFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can Not Parce DateTil filter.
        /// </summary>
        public static string CanNotParceDateTil {
            get {
                return ResourceManager.GetString("CanNotParceDateTil", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can not translate string as int.
        /// </summary>
        public static string CANT_PARS_TO_INT {
            get {
                return ResourceManager.GetString("CANT_PARS_TO_INT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Car model type.
        /// </summary>
        public static string CARMODELTYPE_INDEX {
            get {
                return ResourceManager.GetString("CARMODELTYPE_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Categories.
        /// </summary>
        public static string CARMODELTYPETREE_INDEX {
            get {
                return ResourceManager.GetString("CARMODELTYPETREE_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Analogs.
        /// </summary>
        public static string CARMODELTYPETREEITEMANALOG_INDEX {
            get {
                return ResourceManager.GetString("CARMODELTYPETREEITEMANALOG_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Article.
        /// </summary>
        public static string CARMODELTYPETREEITEMDETAIL_INDEX {
            get {
                return ResourceManager.GetString("CARMODELTYPETREEITEMDETAIL_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Items list.
        /// </summary>
        public static string CARMODELTYPETREEITEMS_INDEX {
            get {
                return ResourceManager.GetString("CARMODELTYPETREEITEMS_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search By Group.
        /// </summary>
        public static string CategoryItemSearchByDescr {
            get {
                return ResourceManager.GetString("CategoryItemSearchByDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search By Group.
        /// </summary>
        public static string CategoryItemSearchByGroup {
            get {
                return ResourceManager.GetString("CategoryItemSearchByGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search By Id.
        /// </summary>
        public static string CategoryItemSearchById {
            get {
                return ResourceManager.GetString("CategoryItemSearchById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Category Descr.
        /// </summary>
        public static string CategorySearchByDescr {
            get {
                return ResourceManager.GetString("CategorySearchByDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Category Code.
        /// </summary>
        public static string CategorySearchById {
            get {
                return ResourceManager.GetString("CategorySearchById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Category Parent Code.
        /// </summary>
        public static string CategorySearchByParent {
            get {
                return ResourceManager.GetString("CategorySearchByParent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Close Current Spell First.
        /// </summary>
        public static string CloseCurrentSpellFirst {
            get {
                return ResourceManager.GetString("CloseCurrentSpellFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Spell can be closed when blocked.
        /// </summary>
        public static string CloseSpellWhenBlocked {
            get {
                return ResourceManager.GetString("CloseSpellWhenBlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Contact Types.
        /// </summary>
        public static string ContactType_INDEX {
            get {
                return ResourceManager.GetString("ContactType_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sale in.
        /// </summary>
        public static string COUNTRIES_INDEX {
            get {
                return ResourceManager.GetString("COUNTRIES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Country.
        /// </summary>
        public static string Country_INDEX {
            get {
                return ResourceManager.GetString("Country_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create.
        /// </summary>
        public static string CREATE_ACTION {
            get {
                return ResourceManager.GetString("CREATE_ACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create new Spell.
        /// </summary>
        public static string CREATE_NEW_SPELL {
            get {
                return ResourceManager.GetString("CREATE_NEW_SPELL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create New.
        /// </summary>
        public static string CREATENEW_ACTION {
            get {
                return ResourceManager.GetString("CREATENEW_ACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open New Spell If Current Spell is closed.
        /// </summary>
        public static string CreateNewSpellIfCurrentClose {
            get {
                return ResourceManager.GetString("CreateNewSpellIfCurrentClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create Sheet Revaluation.
        /// </summary>
        public static string CreateSheetRevaluation {
            get {
                return ResourceManager.GetString("CreateSheetRevaluation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Curr Price Sum.
        /// </summary>
        public static string CurrArtPriceSum {
            get {
                return ResourceManager.GetString("CurrArtPriceSum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Currency.
        /// </summary>
        public static string Currency_INDEX {
            get {
                return ResourceManager.GetString("Currency_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current Options Are Applied.
        /// </summary>
        public static string CurrentOptionsAreApplied {
            get {
                return ResourceManager.GetString("CurrentOptionsAreApplied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete.
        /// </summary>
        public static string DELETE_ACTION {
            get {
                return ResourceManager.GetString("DELETE_ACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Details.
        /// </summary>
        public static string DETAILS_ACTION {
            get {
                return ResourceManager.GetString("DETAILS_ACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Distribute rates.
        /// </summary>
        public static string DISTRIBUTE_RATES {
            get {
                return ResourceManager.GetString("DISTRIBUTE_RATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cancel.
        /// </summary>
        public static string DOCANCEL_TITLE {
            get {
                return ResourceManager.GetString("DOCANCEL_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Make Order.
        /// </summary>
        public static string DoMakeOrder {
            get {
                return ResourceManager.GetString("DoMakeOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Process SheetRevaluation.
        /// </summary>
        public static string DoMakeSheetRevaluation_INDEX {
            get {
                return ResourceManager.GetString("DoMakeSheetRevaluation_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select current.
        /// </summary>
        public static string DOSELECT_TITLE {
            get {
                return ResourceManager.GetString("DOSELECT_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Part selection is reset. This occurs if you are not logged in, but began to form order..
        /// </summary>
        public static string DoSelectArticle_Error {
            get {
                return ResourceManager.GetString("DoSelectArticle_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mistake of ordering.
        /// </summary>
        public static string DoSelectArticle_INDEX {
            get {
                return ResourceManager.GetString("DoSelectArticle_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rest not found.
        /// </summary>
        public static string DoSelectArticle_RESTNOTFOUND {
            get {
                return ResourceManager.GetString("DoSelectArticle_RESTNOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The role of &quot;Administrator ecosystem&quot; gives the opportunity to register in the information system, one or several companies and to bind to each of the companies users with a roles administrators and auditors. After creating Ecosystems Administrator sends login to enterprise administrators..
        /// </summary>
        public static string EcoSystemAdminAction1 {
            get {
                return ResourceManager.GetString("EcoSystemAdminAction1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Every now secured the active flag. Flag off stops ecosystem response to queries and update data for this plant..
        /// </summary>
        public static string EcoSystemAdminAction2 {
            get {
                return ResourceManager.GetString("EcoSystemAdminAction2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Nevertheless, the right option switches the active flag is left for enterprise administrators. To prevent re-enterprise administrators vlyuchenie enterprise information resources to the work, the administrator is required to turn off the ecosystem similar flag on an enterprise administrator..
        /// </summary>
        public static string EcoSystemAdminAction3 {
            get {
                return ResourceManager.GetString("EcoSystemAdminAction3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Conversely, when the resources of the enterprise to work. Administrator ecosystem must include the active flag At least one Enterprise Administrator..
        /// </summary>
        public static string EcoSystemAdminAction4 {
            get {
                return ResourceManager.GetString("EcoSystemAdminAction4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на When you disable (or enable) flag activity for the administrator account of the enterprise is no change, no passwords or credentials. Performs a simple lock (unlock)..
        /// </summary>
        public static string EcoSystemAdminAction5 {
            get {
                return ResourceManager.GetString("EcoSystemAdminAction5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Strktura data organized as a tree with the top node in the enterprise. So the first step - is to move to the list of companies. On the page that will provide recommendations to work with other nodes in the tree..
        /// </summary>
        public static string EcoSystemAdminAction6 {
            get {
                return ResourceManager.GetString("EcoSystemAdminAction6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Types.
        /// </summary>
        public static string EcoSystemAdminAction7 {
            get {
                return ResourceManager.GetString("EcoSystemAdminAction7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на EcoSystem Administrator.
        /// </summary>
        public static string EcoSystemAdminName {
            get {
                return ResourceManager.GetString("EcoSystemAdminName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Edit.
        /// </summary>
        public static string EDIT_ACTION {
            get {
                return ResourceManager.GetString("EDIT_ACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enterprise is not defined.
        /// </summary>
        public static string ENTERPRISE_NOT_DEFINED {
            get {
                return ResourceManager.GetString("ENTERPRISE_NOT_DEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на While filling in the address, use the codifier COATO. Choice of settlement through codificator COATO correctly (automatically) fill region, district, type of settlement.Active flag is turned off, if the address was not the actual. Flag visibility determines visibility addresses external systems or the Internet..
        /// </summary>
        public static string EnterpriseAddressHelp1 {
            get {
                return ResourceManager.GetString("EnterpriseAddressHelp1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The first thing you should do after receiving the enterprise administrator login and password - is log on and change your login password..
        /// </summary>
        public static string EnterpriseAdminAction1 {
            get {
                return ResourceManager.GetString("EnterpriseAdminAction1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If necessary, an enterprise administrator can change the name of the company..
        /// </summary>
        public static string EnterpriseAdminAction2 {
            get {
                return ResourceManager.GetString("EnterpriseAdminAction2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The next step - is to create records for one or more departments. One department must be created in any case..
        /// </summary>
        public static string EnterpriseAdminAction3 {
            get {
                return ResourceManager.GetString("EnterpriseAdminAction3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enterprise Administrator role allows you to change the state of the enterprise: &quot;Enterprise Admins&quot; and &quot;Enterprise auditors&quot;.
        /// </summary>
        public static string EnterpriseAdminAction4 {
            get {
                return ResourceManager.GetString("EnterpriseAdminAction4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enterprise  Administrator.
        /// </summary>
        public static string EnterpriseAdminName {
            get {
                return ResourceManager.GetString("EnterpriseAdminName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Articles.
        /// </summary>
        public static string EnterpriseArticle_INDEX {
            get {
                return ResourceManager.GetString("EnterpriseArticle_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Article enterprise really consists of two articles: internal and external. Domestic product is used by the enterprise and its business units to implement accounting movement of goods and services. Outside the article - it is clear that the buyer, ie what he sees on the box Item: Brand, Name and Barcode (EAN). Allowed different internal part numbers in the domain to the same external article. When editing an article provided the opportunity to choose the appearance of the product catalog TecDoc..
        /// </summary>
        public static string EnterpriseArticleHelp1 {
            get {
                return ResourceManager.GetString("EnterpriseArticleHelp1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Implemented two views with part numbers. At first glimpse, you can go out with stoanichki &quot;Details&quot; describe Brenda. In this case, you get articles filtered by Brenda. Or you can go to a page with articles &quot;Details&quot; of your company. In this case, you get all articles without filtering by brand..
        /// </summary>
        public static string EnterpriseArticleHelp2 {
            get {
                return ResourceManager.GetString("EnterpriseArticleHelp2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The auditor&apos;s role Enterprise allows you to view all enterprise data tree to which the auditor is bound..
        /// </summary>
        public static string EnterpriseAudit1 {
            get {
                return ResourceManager.GetString("EnterpriseAudit1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на For each node, the data link is provided to the auditor &quot;Detail&quot;, allowing to plunge the entire depth of the data tree. For example, clicking on the shape of the &quot;Details&quot; for node &quot;Enterprise&quot;, the auditor obtains the possibility to see a list of users. Again, clicking on the shape of the &quot;Details&quot; selected user auditor obtains access to the contact list of the user..
        /// </summary>
        public static string EnterpriseAudit2 {
            get {
                return ResourceManager.GetString("EnterpriseAudit2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enterprise Auditor.
        /// </summary>
        public static string EnterpriseAuditName {
            get {
                return ResourceManager.GetString("EnterpriseAuditName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exchange Rate.
        /// </summary>
        public static string EnterpriseBranchRateTDES_INDEX {
            get {
                return ResourceManager.GetString("EnterpriseBranchRateTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch Reply settings.
        /// </summary>
        public static string EnterpriseBranchReplyTDES_INDEX {
            get {
                return ResourceManager.GetString("EnterpriseBranchReplyTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Record residue includes artikur + supplier units, external artikur + supplier, Quantity in stock and the price per unit of output. There are two technical field - the time of last update records and the last replication to a central server, if the solution is configured for replication..
        /// </summary>
        public static string EnterpriseBranchRestHelp1 {
            get {
                return ResourceManager.GetString("EnterpriseBranchRestHelp1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enterprise Branch is not active.
        /// </summary>
        public static string EnterpriseBranchTDES_ISNOTACTIVE {
            get {
                return ResourceManager.GetString("EnterpriseBranchTDES_ISNOTACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch not found.
        /// </summary>
        public static string EnterpriseBranchTDES_NOTFOUND {
            get {
                return ResourceManager.GetString("EnterpriseBranchTDES_NOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Per unit fixed unit staff with the following set of roles: administrator units auditor units accountant (or senior salesman) and the seller. Every performer can be fixed contacts. This can be done through the page &quot;Details&quot; for the selected user from the list..
        /// </summary>
        public static string EnterpriseBranchUsersHelp1 {
            get {
                return ResourceManager.GetString("EnterpriseBranchUsersHelp1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Workplace is a generalization of the seller to the cash register. After opening shift (opens in a locked mode), you must sit down sellers jobs. After that unlock shift. If you open shifts sellers do not change their jobs, then attach operation can not perform..
        /// </summary>
        public static string EnterpriseBranchWorkPlacesHelp1 {
            get {
                return ResourceManager.GetString("EnterpriseBranchWorkPlacesHelp1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Brand.
        /// </summary>
        public static string EnterpriseBrand_INDEX {
            get {
                return ResourceManager.GetString("EnterpriseBrand_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do not confuse the supplier and brand. Examples are the brand Coca-Cola, Oriflame. An example of a vendor is Shate-M. Supplier - is your business partner from whom you purchase goods. Each entry of the brand associated list item you traded your business. To go to the list of articles to choose a brand, go to the page &quot;Details&quot;. Button at the bottom of the screen will take you to a page articles..
        /// </summary>
        public static string EnterpriseBrandHelp1 {
            get {
                return ResourceManager.GetString("EnterpriseBrandHelp1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CategoryI tem.
        /// </summary>
        public static string EnterpriseCategoryItemTDES_INDEX {
            get {
                return ResourceManager.GetString("EnterpriseCategoryItemTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Categories of goods.
        /// </summary>
        public static string EnterpriseCategoryTDES_INDEX {
            get {
                return ResourceManager.GetString("EnterpriseCategoryTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Category is not defined.
        /// </summary>
        public static string EnterpriseCategoryTDES_NOT_DEFINED {
            get {
                return ResourceManager.GetString("EnterpriseCategoryTDES_NOT_DEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Record company consists of four elements : A unique identifier name for the item catalog .
        ///The unique identifier is not implemented as an integer , but as a 16 -byte GUID.
        ///Implementing a GUID gives uniqueness to the global level ( Internet) and ensures that the identity of your company is never matched with any other identifier .
        ///This identifier is generated automatically , but when creating a new record you have the opportunity to make their own .
        ///The need for this ( edit GUID) occurs if you transfer y [остаток строки не уместился]&quot;;.
        /// </summary>
        public static string EnterprisesHelp1 {
            get {
                return ResourceManager.GetString("EnterprisesHelp1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Active flag allows you to block operation of the enterprise. Also off the flag must be turned off active flag administrators of the enterprise, as they have the right to include and to block the work of the enterprise..
        /// </summary>
        public static string EnterprisesHelp2 {
            get {
                return ResourceManager.GetString("EnterprisesHelp2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Directory field for the item - this name string in the web.config file as shown below.
        /// </summary>
        public static string EnterprisesHelp3 {
            get {
                return ResourceManager.GetString("EnterprisesHelp3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на As was stated, the item description can be in a separate database, which handles a separate instance of SQL Server. On the one hand you have to make to the web.config connection string. On the other hand you have to tie a string to the name of the enterprise..
        /// </summary>
        public static string EnterprisesHelp4 {
            get {
                return ResourceManager.GetString("EnterprisesHelp4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Editing (view) &quot;State Enterprise&quot;, &quot;Division&quot;, &quot;Address&quot;, &quot;supplier&quot;, &quot;brand&quot;, &quot;Articles&quot; click on the link in detail and at the bottom of the screen will get links to pages for their respective data nodes..
        /// </summary>
        public static string EnterprisesHelp5 {
            get {
                return ResourceManager.GetString("EnterprisesHelp5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current page is available to all the performers. But artists bound to the enterprise will see exactly one row - their business. Only Enterprise Administrators can edit the name and flag of the enterprise activity.
        /// </summary>
        public static string EnterprisesHelp6 {
            get {
                return ResourceManager.GetString("EnterprisesHelp6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Editing (view) &quot;State Enterprise&quot;, &quot;Division&quot;, &quot;Address&quot;, &quot;supplier&quot;, &quot;brand&quot;, &quot;Articles&quot; click on the link at the bottom of the screen to work with relevant data nodes..
        /// </summary>
        public static string EnterprisesHelp7 {
            get {
                return ResourceManager.GetString("EnterprisesHelp7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enterprise admins only allowed to change any data tied to the enterprise. Users with other roles can change your account information, add or modify your contacts and their addresses..
        /// </summary>
        public static string EnterprisesHelp8 {
            get {
                return ResourceManager.GetString("EnterprisesHelp8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Within a single enterprise data about other users are available for viewing other users, provided if the visibility flag is enabled on the record. Availability credentials available to other users in force production needs. For example, the seller may require the assistance of an administrator..
        /// </summary>
        public static string EnterprisesHelp9 {
            get {
                return ResourceManager.GetString("EnterprisesHelp9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Suppliers.
        /// </summary>
        public static string EnterpriseSupplier_INDEX {
            get {
                return ResourceManager.GetString("EnterpriseSupplier_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do not confuse the supplier and brand. Examples are the brand Coca-Cola, Oriflame. An example of a vendor is Shate-M. Supplier - is your business partner from whom you purchase goods. Each entry supplier bind address of the supplier and contacts. To edit (view) addresses and contacts the supplier tab &quot;Details&quot;. Button at the bottom of the screen give you switch to the appropriate page..
        /// </summary>
        public static string EnterpriseSupplierHelp1 {
            get {
                return ResourceManager.GetString("EnterpriseSupplierHelp1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Supplier not found.
        /// </summary>
        public static string EnterpriseSupplierTDES_NOTFOUND {
            get {
                return ResourceManager.GetString("EnterpriseSupplierTDES_NOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enterprises.
        /// </summary>
        public static string EnterpriseTDES_INDEX {
            get {
                return ResourceManager.GetString("EnterpriseTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enterprise.
        /// </summary>
        public static string EnterpriseTDES_ITEM {
            get {
                return ResourceManager.GetString("EnterpriseTDES_ITEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enterprise not found.
        /// </summary>
        public static string EnterpriseTDES_NOTDEFINED {
            get {
                return ResourceManager.GetString("EnterpriseTDES_NOTDEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TecDoc Src Types.
        /// </summary>
        public static string EnterpriseTecDocSrcTypeTDES_TITLE {
            get {
                return ResourceManager.GetString("EnterpriseTecDocSrcTypeTDES_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User not found.
        /// </summary>
        public static string ENTERPRISEUSER_NOTDEFINED {
            get {
                return ResourceManager.GetString("ENTERPRISEUSER_NOTDEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Contact this person or phone number or e-mail. When creating, editing kongtakta this type can be set. Contact the following fields Guid - a unique identifier of a record at the Internet, Contact - it or phone or e-mail, Activity - flag off if contact is outdated and Visibility - if the flag is off, then other users will not see this contact..
        /// </summary>
        public static string EnterpriseUserContactHelp1 {
            get {
                return ResourceManager.GetString("EnterpriseUserContactHelp1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на For each user fixed NIC ( This login) , name , flag Active ( System Access ) , Flag Admin ( Enterprise Administrator role ) , Flag Audit ( Auditor Enterprise ) and password. Password is entered when creating your account . The user is then transferred to the login name and password. When you first log into the system , the user must change their password. The enterprise administrator can block another administrator . Can block and itself if desired. After blocking all enterprise administrators should be enc [остаток строки не уместился]&quot;;.
        /// </summary>
        public static string EnterpriseUsersHelp1 {
            get {
                return ResourceManager.GetString("EnterpriseUsersHelp1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If the selected account go to the page &quot;Details&quot;, then have the opportunity to edit and view contacts (e-mail phones). To move use the &quot;contact&quot; at the bottom of the screen..
        /// </summary>
        public static string EnterpriseUsersHelp2 {
            get {
                return ResourceManager.GetString("EnterpriseUsersHelp2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you create a user, but he can not enter the system. Use the &quot;Apply Settings&quot;. When this is re replication user roles in infrastructure information system security. If you find that you are already registered, the password is changed..
        /// </summary>
        public static string EnterpriseUsersHelp3 {
            get {
                return ResourceManager.GetString("EnterpriseUsersHelp3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Users.
        /// </summary>
        public static string ENTERPRISEUSERSLIST {
            get {
                return ResourceManager.GetString("ENTERPRISEUSERSLIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enterprise users.
        /// </summary>
        public static string EnterpriseUserTDES_INDEX {
            get {
                return ResourceManager.GetString("EnterpriseUserTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exch.Rate.
        /// </summary>
        public static string ExchRate {
            get {
                return ResourceManager.GetString("ExchRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Address type.
        /// </summary>
        public static string FILTER_ADDRESSTYPE {
            get {
                return ResourceManager.GetString("FILTER_ADDRESSTYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch type.
        /// </summary>
        public static string FILTER_BRANCHTYPE {
            get {
                return ResourceManager.GetString("FILTER_BRANCHTYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Actual.
        /// </summary>
        public static string FILTER_ISACTIVE {
            get {
                return ResourceManager.GetString("FILTER_ISACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Admin.
        /// </summary>
        public static string FILTER_ISADMIN {
            get {
                return ResourceManager.GetString("FILTER_ISADMIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Audit.
        /// </summary>
        public static string FILTER_ISAUDIT {
            get {
                return ResourceManager.GetString("FILTER_ISAUDIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Order is processed.
        /// </summary>
        public static string FILTER_ISDONE {
            get {
                return ResourceManager.GetString("FILTER_ISDONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Paid.
        /// </summary>
        public static string FILTER_ISPAID {
            get {
                return ResourceManager.GetString("FILTER_ISPAID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Storned.
        /// </summary>
        public static string FILTER_ISREVERSE {
            get {
                return ResourceManager.GetString("FILTER_ISREVERSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Seller.
        /// </summary>
        public static string FILTER_ISSELLER {
            get {
                return ResourceManager.GetString("FILTER_ISSELLER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Visible.
        /// </summary>
        public static string FILTER_ISVISIBLE {
            get {
                return ResourceManager.GetString("FILTER_ISVISIBLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Filter by NIC.
        /// </summary>
        public static string FILTER_NIC {
            get {
                return ResourceManager.GetString("FILTER_NIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current filter by.
        /// </summary>
        public static string FILTER_TITLE {
            get {
                return ResourceManager.GetString("FILTER_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Filter by fluel.
        /// </summary>
        public static string FILTER_TITLE_FLUEL {
            get {
                return ResourceManager.GetString("FILTER_TITLE_FLUEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Filter by town.
        /// </summary>
        public static string FILTER_TITLE_TOWN {
            get {
                return ResourceManager.GetString("FILTER_TITLE_TOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Such user nic exists in db.
        /// </summary>
        public static string GestUserNic_EXISTS {
            get {
                return ResourceManager.GetString("GestUserNic_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Nic is not defined customer.
        /// </summary>
        public static string GestUserNic_NOT_DEFINED {
            get {
                return ResourceManager.GetString("GestUserNic_NOT_DEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Process State.
        /// </summary>
        public static string GETSTATEINFO {
            get {
                return ResourceManager.GetString("GETSTATEINFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Forum.
        /// </summary>
        public static string GoToForum {
            get {
                return ResourceManager.GetString("GoToForum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Construct Number.
        /// </summary>
        public static string GUEST_MANUF_IDS_INDEX {
            get {
                return ResourceManager.GetString("GUEST_MANUF_IDS_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на EAN.
        /// </summary>
        public static string GUEST_SEARCH_EAN {
            get {
                return ResourceManager.GetString("GUEST_SEARCH_EAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Suplier Number.
        /// </summary>
        public static string GUEST_SEARCH_SUPPID {
            get {
                return ResourceManager.GetString("GUEST_SEARCH_SUPPID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TecDoc Number.
        /// </summary>
        public static string GUEST_SEARCH_TECDOCID {
            get {
                return ResourceManager.GetString("GUEST_SEARCH_TECDOCID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Shops.
        /// </summary>
        public static string GuestBranchSumTDES_INDEX {
            get {
                return ResourceManager.GetString("GuestBranchSumTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Internet profile of shop.
        /// </summary>
        public static string GuestBranchTDES_INDEX {
            get {
                return ResourceManager.GetString("GuestBranchTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can not find such a Branch.
        /// </summary>
        public static string GuestBranchTDES_NOTFOUND {
            get {
                return ResourceManager.GetString("GuestBranchTDES_NOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wrong setting for Order Table .
        /// </summary>
        public static string GuestEnterpriseBranchTDES_NOTFOUND {
            get {
                return ResourceManager.GetString("GuestEnterpriseBranchTDES_NOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add Article to Order.
        /// </summary>
        public static string GuestOrderArticleTDES_CREATE {
            get {
                return ResourceManager.GetString("GuestOrderArticleTDES_CREATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change Order.
        /// </summary>
        public static string GuestOrderArticleTDES_EDIT {
            get {
                return ResourceManager.GetString("GuestOrderArticleTDES_EDIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Articles of order.
        /// </summary>
        public static string GuestOrderArticleTDES_INDEX {
            get {
                return ResourceManager.GetString("GuestOrderArticleTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reached the maximum items in the order..
        /// </summary>
        public static string GuestOrderArticleTDES_ISMAX {
            get {
                return ResourceManager.GetString("GuestOrderArticleTDES_ISMAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Orders on the store is created automatically when choosing a product..
        /// </summary>
        public static string GuestOrderTDES_AUTOCREATE {
            get {
                return ResourceManager.GetString("GuestOrderTDES_AUTOCREATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create my order.
        /// </summary>
        public static string GuestOrderTDES_CREATE {
            get {
                return ResourceManager.GetString("GuestOrderTDES_CREATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create Sale.
        /// </summary>
        public static string GuestOrderTDES_CREATESALE {
            get {
                return ResourceManager.GetString("GuestOrderTDES_CREATESALE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Order profile.
        /// </summary>
        public static string GuestOrderTDES_DETAIL {
            get {
                return ResourceManager.GetString("GuestOrderTDES_DETAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Edit Order profile.
        /// </summary>
        public static string GuestOrderTDES_EDIT {
            get {
                return ResourceManager.GetString("GuestOrderTDES_EDIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на My Orders.
        /// </summary>
        public static string GuestOrderTDES_INDEX {
            get {
                return ResourceManager.GetString("GuestOrderTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Order is done or replicated.
        /// </summary>
        public static string GuestOrderTDES_ISDONE {
            get {
                return ResourceManager.GetString("GuestOrderTDES_ISDONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Order IS MAX. Delete old orders.
        /// </summary>
        public static string GuestOrderTDES_ISMAX {
            get {
                return ResourceManager.GetString("GuestOrderTDES_ISMAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Created till.
        /// </summary>
        public static string GuestOrderTDES_LastUpdatedLargeThan {
            get {
                return ResourceManager.GetString("GuestOrderTDES_LastUpdatedLargeThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Created from.
        /// </summary>
        public static string GuestOrderTDES_LastUpdatedLessThan {
            get {
                return ResourceManager.GetString("GuestOrderTDES_LastUpdatedLessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Count of Articles is zero.
        /// </summary>
        public static string GuestOrderTDES_NOARTCOUNT {
            get {
                return ResourceManager.GetString("GuestOrderTDES_NOARTCOUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can not found given Order.
        /// </summary>
        public static string GuestOrderTDES_NOTFOUND {
            get {
                return ResourceManager.GetString("GuestOrderTDES_NOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reset Actual Prices.
        /// </summary>
        public static string GuestOrderTDES_RESETPRICES {
            get {
                return ResourceManager.GetString("GuestOrderTDES_RESETPRICES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Resetting of prices is ended.
        /// </summary>
        public static string GuestOrderTDES_RESETPRICES_ISENDED {
            get {
                return ResourceManager.GetString("GuestOrderTDES_RESETPRICES_ISENDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create My profile.
        /// </summary>
        public static string GuestProfileTDES_CREATE {
            get {
                return ResourceManager.GetString("GuestProfileTDES_CREATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete My profile.
        /// </summary>
        public static string GuestProfileTDES_DELETE {
            get {
                return ResourceManager.GetString("GuestProfileTDES_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Edit My profile.
        /// </summary>
        public static string GuestProfileTDES_EDIT {
            get {
                return ResourceManager.GetString("GuestProfileTDES_EDIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на My profile.
        /// </summary>
        public static string GuestProfileTDES_INDEX {
            get {
                return ResourceManager.GetString("GuestProfileTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hide Help.
        /// </summary>
        public static string HideHelp {
            get {
                return ResourceManager.GetString("HideHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This site will interest both buyers and sellers of automotive parts..
        /// </summary>
        public static string HomePageIndex {
            get {
                return ResourceManager.GetString("HomePageIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Article.
        /// </summary>
        public static string IncomeArticleTDES_INDEX {
            get {
                return ResourceManager.GetString("IncomeArticleTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Report.
        /// </summary>
        public static string IncomePayRollReport {
            get {
                return ResourceManager.GetString("IncomePayRollReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can not change(delete) processed sheet.
        /// </summary>
        public static string IncomePayRollTDES_CANNOTCHANGE {
            get {
                return ResourceManager.GetString("IncomePayRollTDES_CANNOTCHANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Income Pay Roll.
        /// </summary>
        public static string IncomePayRollTDES_INDEX {
            get {
                return ResourceManager.GetString("IncomePayRollTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Income PayRoll IS POCESSES.
        /// </summary>
        public static string IncomePayRollTDES_ISPOCESSES {
            get {
                return ResourceManager.GetString("IncomePayRollTDES_ISPOCESSES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Income PayRoll NOT FOUND.
        /// </summary>
        public static string IncomePayRollTDES_NOTFOUND {
            get {
                return ResourceManager.GetString("IncomePayRollTDES_NOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Menu by roles.
        /// </summary>
        public static string IndexByRoles {
            get {
                return ResourceManager.GetString("IndexByRoles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на In Stock.
        /// </summary>
        public static string InStock {
            get {
                return ResourceManager.GetString("InStock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на  LANGUAGES.
        /// </summary>
        public static string LANGUAGES_INDEX {
            get {
                return ResourceManager.GetString("LANGUAGES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Look For Article in Rests.
        /// </summary>
        public static string LookForArticleRest_INDEX {
            get {
                return ResourceManager.GetString("LookForArticleRest_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Selt article.
        /// </summary>
        public static string LookForArticleSelt_INDEX {
            get {
                return ResourceManager.GetString("LookForArticleSelt_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reply Branch.
        /// </summary>
        public static string MakeBranchReply {
            get {
                return ResourceManager.GetString("MakeBranchReply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Process Income.
        /// </summary>
        public static string MakeIncome_INDEX {
            get {
                return ResourceManager.GetString("MakeIncome_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Replicate orders.
        /// </summary>
        public static string MakeOrderReply {
            get {
                return ResourceManager.GetString("MakeOrderReply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Make Payment.
        /// </summary>
        public static string MAKEPAYMENT {
            get {
                return ResourceManager.GetString("MAKEPAYMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Make Return.
        /// </summary>
        public static string MakeReturn {
            get {
                return ResourceManager.GetString("MakeReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Make Spell Closed.
        /// </summary>
        public static string MakeSpellClosed_INDEX {
            get {
                return ResourceManager.GetString("MakeSpellClosed_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Put User onto WorkPlace.
        /// </summary>
        public static string MakeUser2WorkPlace {
            get {
                return ResourceManager.GetString("MakeUser2WorkPlace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Manufacture ids.
        /// </summary>
        public static string MANUF_IDS_INDEX {
            get {
                return ResourceManager.GetString("MANUF_IDS_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Multiplexer.
        /// </summary>
        public static string Multiplexer {
            get {
                return ResourceManager.GetString("Multiplexer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Contacts.
        /// </summary>
        public static string MYCONTACTS {
            get {
                return ResourceManager.GetString("MYCONTACTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New Price sum.
        /// </summary>
        public static string NewArtPriceSum {
            get {
                return ResourceManager.GetString("NewArtPriceSum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Next.
        /// </summary>
        public static string NEXT_TITLE {
            get {
                return ResourceManager.GetString("NEXT_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No any data.
        /// </summary>
        public static string NO_ANY_DATA {
            get {
                return ResourceManager.GetString("NO_ANY_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No Such Articule by TECDOC IDs.
        /// </summary>
        public static string NoSuchArticule {
            get {
                return ResourceManager.GetString("NoSuchArticule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do not forget set users to workplaces and unblock the spell.
        /// </summary>
        public static string OpenSpellDoWorkPlaceAndUnBlock {
            get {
                return ResourceManager.GetString("OpenSpellDoWorkPlaceAndUnBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New Spell can be opened in blocked state only..
        /// </summary>
        public static string OpenSpellInBlockedMode {
            get {
                return ResourceManager.GetString("OpenSpellInBlockedMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Margin sum.
        /// </summary>
        public static string OperSum {
            get {
                return ResourceManager.GetString("OperSum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Advance orders blocked by the administrato.
        /// </summary>
        public static string OrderBranchTDES_ISNOTACTIVE {
            get {
                return ResourceManager.GetString("OrderBranchTDES_ISNOTACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Advance orders not deployed administrator.
        /// </summary>
        public static string OrderBranchTDES_NOTFOUND {
            get {
                return ResourceManager.GetString("OrderBranchTDES_NOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Original Catalog.
        /// </summary>
        public static string OriginalCatalog {
            get {
                return ResourceManager.GetString("OriginalCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на overall control.
        /// </summary>
        public static string OverallControl {
            get {
                return ResourceManager.GetString("OverallControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на of.
        /// </summary>
        public static string PAGE_OF {
            get {
                return ResourceManager.GetString("PAGE_OF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Without deletion.
        /// </summary>
        public static string PartialControl {
            get {
                return ResourceManager.GetString("PartialControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Phones.
        /// </summary>
        public static string Phones {
            get {
                return ResourceManager.GetString("Phones", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Currency Price.
        /// </summary>
        public static string PriceCurrencyIso {
            get {
                return ResourceManager.GetString("PriceCurrencyIso", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Product category.
        /// </summary>
        public static string ProductCategory_INDEX {
            get {
                return ResourceManager.GetString("ProductCategory_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search By Last Name.
        /// </summary>
        public static string ProfileSearchByLastName {
            get {
                return ResourceManager.GetString("ProfileSearchByLastName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search By Nic.
        /// </summary>
        public static string ProfileSearchByNic {
            get {
                return ResourceManager.GetString("ProfileSearchByNic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Purchase Price Sum.
        /// </summary>
        public static string PurchasePriceSum {
            get {
                return ResourceManager.GetString("PurchasePriceSum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Put Article In Basket.
        /// </summary>
        public static string PutArticleInBasket {
            get {
                return ResourceManager.GetString("PutArticleInBasket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Articles.
        /// </summary>
        public static string ReplyArticles {
            get {
                return ResourceManager.GetString("ReplyArticles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Orders.
        /// </summary>
        public static string ReplyOrders {
            get {
                return ResourceManager.GetString("ReplyOrders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Profiles.
        /// </summary>
        public static string ReplyProfile {
            get {
                return ResourceManager.GetString("ReplyProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rests.
        /// </summary>
        public static string ReplyRests {
            get {
                return ResourceManager.GetString("ReplyRests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Notpayed.
        /// </summary>
        public static string ReportTypeNotPayed {
            get {
                return ResourceManager.GetString("ReportTypeNotPayed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Is not Done.
        /// </summary>
        public static string ReportTypeNotReturned {
            get {
                return ResourceManager.GetString("ReportTypeNotReturned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not Returned by spell.
        /// </summary>
        public static string ReportTypeNotReturned_INDEX {
            get {
                return ResourceManager.GetString("ReportTypeNotReturned_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Payed.
        /// </summary>
        public static string ReportTypePayed {
            get {
                return ResourceManager.GetString("ReportTypePayed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Is Done.
        /// </summary>
        public static string ReportTypeReturned {
            get {
                return ResourceManager.GetString("ReportTypeReturned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Returns by spell.
        /// </summary>
        public static string ReportTypeReturned_INDEX {
            get {
                return ResourceManager.GetString("ReportTypeReturned_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Storned.
        /// </summary>
        public static string ReportTypeStorned {
            get {
                return ResourceManager.GetString("ReportTypeStorned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Storned by spell.
        /// </summary>
        public static string ReportTypeStorned_INDEX {
            get {
                return ResourceManager.GetString("ReportTypeStorned_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Income by Rest.
        /// </summary>
        public static string Rest2Income {
            get {
                return ResourceManager.GetString("Rest2Income", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Summary.
        /// </summary>
        public static string Results_TITLE {
            get {
                return ResourceManager.GetString("Results_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change list for current ReturnBasket is possible if it is not paied and active.
        /// </summary>
        public static string ReturnBasketArticleTDES_CANNOTCHANGE {
            get {
                return ResourceManager.GetString("ReturnBasketArticleTDES_CANNOTCHANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Goods.
        /// </summary>
        public static string ReturnBasketArticleTDES_INDEX {
            get {
                return ResourceManager.GetString("ReturnBasketArticleTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current role can not change the list of ReturnBasket.
        /// </summary>
        public static string ReturnBasketArticleTDES_ROLECANNOTCHANGE {
            get {
                return ResourceManager.GetString("ReturnBasketArticleTDES_ROLECANNOTCHANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сopied to parish.
        /// </summary>
        public static string ReturnBasketReportIncomeTDES_INDEX {
            get {
                return ResourceManager.GetString("ReturnBasketReportIncomeTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Returns for spell.
        /// </summary>
        public static string ReturnBasketReportTDES_INDEX {
            get {
                return ResourceManager.GetString("ReturnBasketReportTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Return Amount is large than seld minus storned.
        /// </summary>
        public static string ReturnBasketTDES_AMOUNTINCORRECT {
            get {
                return ResourceManager.GetString("ReturnBasketTDES_AMOUNTINCORRECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Return Amount is less than zero.
        /// </summary>
        public static string ReturnBasketTDES_AMOUNTLESSZERO {
            get {
                return ResourceManager.GetString("ReturnBasketTDES_AMOUNTLESSZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Returns.
        /// </summary>
        public static string ReturnBasketTDES_INDEX {
            get {
                return ResourceManager.GetString("ReturnBasketTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Return Basket is created in another spell.
        /// </summary>
        public static string ReturnBasketTDES_ISCREATED_IN_ANOTHERSPELL {
            get {
                return ResourceManager.GetString("ReturnBasketTDES_ISCREATED_IN_ANOTHERSPELL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Return has been made.
        /// </summary>
        public static string ReturnBasketTDES_ISPAYED {
            get {
                return ResourceManager.GetString("ReturnBasketTDES_ISPAYED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Return Basket is already payed.
        /// </summary>
        public static string ReturnBasketTDES_ISPAYED_OR_REVERSED {
            get {
                return ResourceManager.GetString("ReturnBasketTDES_ISPAYED_OR_REVERSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Return Basket is not defined.
        /// </summary>
        public static string ReturnBasketTDES_NOTFOUND {
            get {
                return ResourceManager.GetString("ReturnBasketTDES_NOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Price is less than zero.
        /// </summary>
        public static string ReturnBasketTDES_PRICELESSZERO {
            get {
                return ResourceManager.GetString("ReturnBasketTDES_PRICELESSZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Profile of current ReturnBasket.
        /// </summary>
        public static string ReturnBasketTDES_PROFILE {
            get {
                return ResourceManager.GetString("ReturnBasketTDES_PROFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Revaluation Article.
        /// </summary>
        public static string RevaluationArticleTDES_INDEX {
            get {
                return ResourceManager.GetString("RevaluationArticleTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reverse Income.
        /// </summary>
        public static string ReverseIncome_INDEX {
            get {
                return ResourceManager.GetString("ReverseIncome_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rounding.
        /// </summary>
        public static string Rounding {
            get {
                return ResourceManager.GetString("Rounding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SaleBasket IS CREATED IN ANOTHER SPELL.
        /// </summary>
        public static string SaleBasket_ISCREATED_IN_ANOTHERSPELL {
            get {
                return ResourceManager.GetString("SaleBasket_ISCREATED_IN_ANOTHERSPELL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SaleBasket is paied.
        /// </summary>
        public static string SaleBasket_ISPAYED_OR_REVERSED {
            get {
                return ResourceManager.GetString("SaleBasket_ISPAYED_OR_REVERSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SaleBasket is not defined.
        /// </summary>
        public static string SaleBasket_NOTDEFINED {
            get {
                return ResourceManager.GetString("SaleBasket_NOTDEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change list for current SaleBasket is possible if it is not paied and active.
        /// </summary>
        public static string SaleBasketArticleTDES_CANNOTCHANGE {
            get {
                return ResourceManager.GetString("SaleBasketArticleTDES_CANNOTCHANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sale Basket Article.
        /// </summary>
        public static string SaleBasketArticleTDES_INDEX {
            get {
                return ResourceManager.GetString("SaleBasketArticleTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sale Basket Article not found.
        /// </summary>
        public static string SaleBasketArticleTDES_NOTFOUND {
            get {
                return ResourceManager.GetString("SaleBasketArticleTDES_NOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на for Sale Basket Article nothing to storn.
        /// </summary>
        public static string SaleBasketArticleTDES_NOTHINGTOSTORN {
            get {
                return ResourceManager.GetString("SaleBasketArticleTDES_NOTHINGTOSTORN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current role can not change the list of SaleBasket.
        /// </summary>
        public static string SaleBasketArticleTDES_ROLECANNOTCHANGE {
            get {
                return ResourceManager.GetString("SaleBasketArticleTDES_ROLECANNOTCHANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сopied from parish.
        /// </summary>
        public static string SaleBasketReportIncomeTDES_INDEX {
            get {
                return ResourceManager.GetString("SaleBasketReportIncomeTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not Payed by spell.
        /// </summary>
        public static string SaleBasketReportNotPayedTDES_INDEX {
            get {
                return ResourceManager.GetString("SaleBasketReportNotPayedTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Storned by spell.
        /// </summary>
        public static string SaleBasketReportStornedTDES_INDEX {
            get {
                return ResourceManager.GetString("SaleBasketReportStornedTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sales by spell.
        /// </summary>
        public static string SaleBasketReportTDES_INDEX {
            get {
                return ResourceManager.GetString("SaleBasketReportTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Created by order:.
        /// </summary>
        public static string SaleBasketTDES_BY_GuestOrderGuid {
            get {
                return ResourceManager.GetString("SaleBasketTDES_BY_GuestOrderGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can not pay: error of distributed transaction.
        /// </summary>
        public static string SaleBasketTDES_DISTRIBUTEDERROR {
            get {
                return ResourceManager.GetString("SaleBasketTDES_DISTRIBUTEDERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Baskets for current Spell.
        /// </summary>
        public static string SaleBasketTDES_INDEX {
            get {
                return ResourceManager.GetString("SaleBasketTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sale Basket IS PAYED.
        /// </summary>
        public static string SaleBasketTDES_ISPAYED {
            get {
                return ResourceManager.GetString("SaleBasketTDES_ISPAYED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sale Basket is storned.
        /// </summary>
        public static string SaleBasketTDES_ISREVERCED {
            get {
                return ResourceManager.GetString("SaleBasketTDES_ISREVERCED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Payment is done. Rests are changed..
        /// </summary>
        public static string SaleBasketTDES_PAYMENT_OK {
            get {
                return ResourceManager.GetString("SaleBasketTDES_PAYMENT_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DB Error while making payment for.
        /// </summary>
        public static string SaleBasketTDES_PAYMENTERROR {
            get {
                return ResourceManager.GetString("SaleBasketTDES_PAYMENTERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DB Error while changing status for order.
        /// </summary>
        public static string SaleBasketTDES_PAYMENTERROR_STATUS {
            get {
                return ResourceManager.GetString("SaleBasketTDES_PAYMENTERROR_STATUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Profile of current SaleBasket.
        /// </summary>
        public static string SaleBasketTDES_PROFILE {
            get {
                return ResourceManager.GetString("SaleBasketTDES_PROFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can not pay: error while changing rests.
        /// </summary>
        public static string SaleBasketTDES_RESTERROR {
            get {
                return ResourceManager.GetString("SaleBasketTDES_RESTERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can not pay: spell is changed.
        /// </summary>
        public static string SaleBasketTDES_SPELL_ERROR {
            get {
                return ResourceManager.GetString("SaleBasketTDES_SPELL_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can not pay: user is changed.
        /// </summary>
        public static string SaleBasketTDES_USER_ERROR {
            get {
                return ResourceManager.GetString("SaleBasketTDES_USER_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can not pay: workplace is changed.
        /// </summary>
        public static string SaleBasketTDES_WP_ERROR {
            get {
                return ResourceManager.GetString("SaleBasketTDES_WP_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save.
        /// </summary>
        public static string SAVE_ACTION {
            get {
                return ResourceManager.GetString("SAVE_ACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search.
        /// </summary>
        public static string SEARCH_ACTION {
            get {
                return ResourceManager.GetString("SEARCH_ACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на EAN.
        /// </summary>
        public static string SEARCH_EAN {
            get {
                return ResourceManager.GetString("SEARCH_EAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search string is empty.
        /// </summary>
        public static string SEARCH_STRING_IS_EMPTY {
            get {
                return ResourceManager.GetString("SEARCH_STRING_IS_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Supplier Id.
        /// </summary>
        public static string SEARCH_SUPPID {
            get {
                return ResourceManager.GetString("SEARCH_SUPPID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Id TecDoc.
        /// </summary>
        public static string SEARCH_TECDOCID {
            get {
                return ResourceManager.GetString("SEARCH_TECDOCID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search in Original catalogs.
        /// </summary>
        public static string SearchOriginal {
            get {
                return ResourceManager.GetString("SearchOriginal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search TecDoc By Article.
        /// </summary>
        public static string SearchTecDocByArticle {
            get {
                return ResourceManager.GetString("SearchTecDocByArticle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search TecDoc By Tree.
        /// </summary>
        public static string SearchTecDocByTree {
            get {
                return ResourceManager.GetString("SearchTecDocByTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на At the sending party is disabled Activity.
        /// </summary>
        public static string SendEnterpriseBranchTDES_ISNOTACTIVE {
            get {
                return ResourceManager.GetString("SendEnterpriseBranchTDES_ISNOTACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Originating party not registered in the system.
        /// </summary>
        public static string SendEnterpriseBranchTDES_NOTFOUND {
            get {
                return ResourceManager.GetString("SendEnterpriseBranchTDES_NOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settlement Type.
        /// </summary>
        public static string SettlementType_INDEX {
            get {
                return ResourceManager.GetString("SettlementType_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can not change processed sheet.
        /// </summary>
        public static string SheetRevaluationTDES_CANNOTCANGE {
            get {
                return ResourceManager.GetString("SheetRevaluationTDES_CANNOTCANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can not delete processed sheet.
        /// </summary>
        public static string SheetRevaluationTDES_CANNOTDELETE {
            get {
                return ResourceManager.GetString("SheetRevaluationTDES_CANNOTDELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sheet Revaluation.
        /// </summary>
        public static string SheetRevaluationTDES_INDEX {
            get {
                return ResourceManager.GetString("SheetRevaluationTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Shop Attributes.
        /// </summary>
        public static string ShopAttribute {
            get {
                return ResourceManager.GetString("ShopAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Flag ON.
        /// </summary>
        public static string SHOWACTIVE {
            get {
                return ResourceManager.GetString("SHOWACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show All.
        /// </summary>
        public static string SHOWALL {
            get {
                return ResourceManager.GetString("SHOWALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hide/Show.
        /// </summary>
        public static string ShowHideBtn {
            get {
                return ResourceManager.GetString("ShowHideBtn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Margin.
        /// </summary>
        public static string ShowMargin {
            get {
                return ResourceManager.GetString("ShowMargin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Markdown.
        /// </summary>
        public static string ShowMarkdown {
            get {
                return ResourceManager.GetString("ShowMarkdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Flag OFF.
        /// </summary>
        public static string SHOWNOTACTIVE {
            get {
                return ResourceManager.GetString("SHOWNOTACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Site.
        /// </summary>
        public static string SiteUrl {
            get {
                return ResourceManager.GetString("SiteUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SOATO.
        /// </summary>
        public static string SOATO {
            get {
                return ResourceManager.GetString("SOATO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Soato.
        /// </summary>
        public static string Soato_INDEX {
            get {
                return ResourceManager.GetString("Soato_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на LookUp Soato.
        /// </summary>
        public static string Soato_LOOKUP {
            get {
                return ResourceManager.GetString("Soato_LOOKUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The solution supports the roles listed below.
        /// </summary>
        public static string SolutionRoles {
            get {
                return ResourceManager.GetString("SolutionRoles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open Date of the New Spell   is Less Than Close Date of Previous one.
        /// </summary>
        public static string SpellCloseDateLargeThanOpenDate {
            get {
                return ResourceManager.GetString("SpellCloseDateLargeThanOpenDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Close Date is Less Than OpenDate.
        /// </summary>
        public static string SpellCloseDateLessThanOpenDate {
            get {
                return ResourceManager.GetString("SpellCloseDateLessThanOpenDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Given Spell Not Found.
        /// </summary>
        public static string SpellGivenNotFound {
            get {
                return ResourceManager.GetString("SpellGivenNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Spell is Not Found.
        /// </summary>
        public static string SpellNotFound {
            get {
                return ResourceManager.GetString("SpellNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dublicate Values.
        /// </summary>
        public static string SqlDublicateValue {
            get {
                return ResourceManager.GetString("SqlDublicateValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SqlError.
        /// </summary>
        public static string SqlError {
            get {
                return ResourceManager.GetString("SqlError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Street type.
        /// </summary>
        public static string StreetType_INDEX {
            get {
                return ResourceManager.GetString("StreetType_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Suppliers Rests.
        /// </summary>
        public static string SuppRestTDES_INDEX {
            get {
                return ResourceManager.GetString("SuppRestTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Are you sure you want to delete this?.
        /// </summary>
        public static string SURE_TO_DELETE {
            get {
                return ResourceManager.GetString("SURE_TO_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Applicability.
        /// </summary>
        public static string TECDOC_APPLICABLE {
            get {
                return ResourceManager.GetString("TECDOC_APPLICABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Suppl.Article.
        /// </summary>
        public static string TECDOC_ART_ARTICLE_NR {
            get {
                return ResourceManager.GetString("TECDOC_ART_ARTICLE_NR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Article.
        /// </summary>
        public static string TECDOC_ART_ID {
            get {
                return ResourceManager.GetString("TECDOC_ART_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на EAN.
        /// </summary>
        public static string TECDOC_EAN_INDEX {
            get {
                return ResourceManager.GetString("TECDOC_EAN_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Group.
        /// </summary>
        public static string TECDOC_GA_NR {
            get {
                return ResourceManager.GetString("TECDOC_GA_NR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Group Name.
        /// </summary>
        public static string TECDOC_GA_TEXT {
            get {
                return ResourceManager.GetString("TECDOC_GA_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Description.
        /// </summary>
        public static string TECDOC_MASTER_BEZ {
            get {
                return ResourceManager.GetString("TECDOC_MASTER_BEZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Supplier Id.
        /// </summary>
        public static string TECDOC_SUP_ID {
            get {
                return ResourceManager.GetString("TECDOC_SUP_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Supplier.
        /// </summary>
        public static string TECDOC_SUP_TEXT {
            get {
                return ResourceManager.GetString("TECDOC_SUP_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Description.
        /// </summary>
        public static string TECDOC_TEX_TEXT {
            get {
                return ResourceManager.GetString("TECDOC_TEX_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на UNIT.
        /// </summary>
        public static string TECDOC_TEX_UNIT {
            get {
                return ResourceManager.GetString("TECDOC_TEX_UNIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Value.
        /// </summary>
        public static string TECDOC_TEX_VALUE {
            get {
                return ResourceManager.GetString("TECDOC_TEX_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TecDoc Country.
        /// </summary>
        public static string TecDocCountry {
            get {
                return ResourceManager.GetString("TecDocCountry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Language and country of TecDoc.
        /// </summary>
        public static string TecDocCountryLang {
            get {
                return ResourceManager.GetString("TecDocCountryLang", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TecDoc Lang.
        /// </summary>
        public static string TecDocLang {
            get {
                return ResourceManager.GetString("TecDocLang", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Models by brand.
        /// </summary>
        public static string TecDocModel_INDEX {
            get {
                return ResourceManager.GetString("TecDocModel_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select.
        /// </summary>
        public static string TecDocSelect {
            get {
                return ResourceManager.GetString("TecDocSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на To make return.
        /// </summary>
        public static string ToMakeReturn {
            get {
                return ResourceManager.GetString("ToMakeReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на To payment.
        /// </summary>
        public static string ToPayment {
            get {
                return ResourceManager.GetString("ToPayment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на To reverce.
        /// </summary>
        public static string ToReverce {
            get {
                return ResourceManager.GetString("ToReverce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Axles.
        /// </summary>
        public static string TreeAxles {
            get {
                return ResourceManager.GetString("TreeAxles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Commercial Vehicles.
        /// </summary>
        public static string TreeCommercialVehicles {
            get {
                return ResourceManager.GetString("TreeCommercialVehicles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Motors.
        /// </summary>
        public static string TreeMotors {
            get {
                return ResourceManager.GetString("TreeMotors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Passenger Cars.
        /// </summary>
        public static string TreePassengerCars {
            get {
                return ResourceManager.GetString("TreePassengerCars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Universals.
        /// </summary>
        public static string TreeUniversals {
            get {
                return ResourceManager.GetString("TreeUniversals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Spell can be (un)blocked when opened.
        /// </summary>
        public static string UnBlockSpellWhenActive {
            get {
                return ResourceManager.GetString("UnBlockSpellWhenActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Under The Order.
        /// </summary>
        public static string UnderTheOrder {
            get {
                return ResourceManager.GetString("UnderTheOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User is not defined.
        /// </summary>
        public static string User_IS_NOT_DEFINED {
            get {
                return ResourceManager.GetString("User_IS_NOT_DEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User to WorkPlace.
        /// </summary>
        public static string User2WorkPlace_INDEX {
            get {
                return ResourceManager.GetString("User2WorkPlace_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на History: User to WorkPlace.
        /// </summary>
        public static string User2WorkPlaceHstTDES_INDEX {
            get {
                return ResourceManager.GetString("User2WorkPlaceHstTDES_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WorkPlace is not defined.
        /// </summary>
        public static string User2WorkPlaceTDES_NOTFOUND {
            get {
                return ResourceManager.GetString("User2WorkPlaceTDES_NOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на View only.
        /// </summary>
        public static string ViewControl {
            get {
                return ResourceManager.GetString("ViewControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WorkPlaces.
        /// </summary>
        public static string WorkPlace_INDEX {
            get {
                return ResourceManager.GetString("WorkPlace_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WorkPlace is not defined.
        /// </summary>
        public static string WorkPlace_IS_NOT_DEFINED {
            get {
                return ResourceManager.GetString("WorkPlace_IS_NOT_DEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на YOU ARE GUEST.
        /// </summary>
        public static string YOUAREGUEST {
            get {
                return ResourceManager.GetString("YOUAREGUEST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you are car owner.
        /// </summary>
        public static string YOUAREGUESTif {
            get {
                return ResourceManager.GetString("YOUAREGUESTif", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на On this site, auto parts stores publish their products and prices. And you are given the opportunity to find and order completion, on one or a few shops in your city..
        /// </summary>
        public static string YOUAREGUESTifThan {
            get {
                return ResourceManager.GetString("YOUAREGUESTifThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на YOU ARE SELLER.
        /// </summary>
        public static string YOUARESELLER {
            get {
                return ResourceManager.GetString("YOUARESELLER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you are seller of auto parts retail.
        /// </summary>
        public static string YOUARESELLERif {
            get {
                return ResourceManager.GetString("YOUARESELLERif", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Provided you with a FREE full-featured software-accounting system, using which you can automatically publish their availability and prices of goods. You can deploy and use this software locally and publish balances and prices online. You can deploy and iseto software.
        /// </summary>
        public static string YOUARESELLERifThan {
            get {
                return ResourceManager.GetString("YOUARESELLERifThan", resourceCulture);
            }
        }
    }
}
