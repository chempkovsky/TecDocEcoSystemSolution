<UserControl x:Name="EnterpriseBranchContactsTDESViewControl" x:Class="WpfCarShopInstaller.View.EnterpriseBranchContactsTDESView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             
xmlns:View="clr-namespace:WpfCarShopInstaller.View"             
xmlns:utilities="clr-namespace:WpfCarShopInstaller.Utility"
             
xmlns:res="clr-namespace:WpfCarShopInstaller.Properties"
xmlns:conv="clr-namespace:WpfCarShopInstaller.Converters"             
xmlns:interactionRequest="clr-namespace:WpfCarShopCommon.InteractionRequest;assembly=WpfCarShopCommon"
xmlns:prism="http://www.codeplex.com/prism"
xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             
             
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="500"
             RenderTransformOrigin="0.5,0.5">
    <UserControl.Resources>
        <conv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" TrueVal="Visible" FalseVal="Collapsed" />
        <Storyboard x:Key="StoryboardOnLoaded">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="EnterpriseBranchContactsTDESViewControl">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.RenderTransform>
        <TransformGroup>
            <ScaleTransform/>
            <SkewTransform/>
            <RotateTransform/>
            <TranslateTransform/>
        </TransformGroup>
    </UserControl.RenderTransform>
    <UserControl.LayoutTransform>
        <TransformGroup>
            <ScaleTransform/>
            <SkewTransform/>
            <RotateTransform/>
            <TranslateTransform/>
        </TransformGroup>
    </UserControl.LayoutTransform>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource StoryboardOnLoaded}"/>
        </EventTrigger>
    </UserControl.Triggers>


    <Grid x:Name="RootGrid" >
        <i:Interaction.Behaviors>
            <ei:DataStateBehavior Binding="{Binding BrowserState}" 
                                  Value="True" 
                                  TrueState="BrowserState" FalseState="EditState"/>
        </i:Interaction.Behaviors>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualBrowserEditStateGroup">
                <VisualStateGroup.Transitions>
                    <VisualTransition From="BrowserState" GeneratedDuration="0" To="EditState">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="BrowserStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="BrowserStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="EditStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="EditStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EditStateGrid">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BrowserStateGrid">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                    <VisualTransition From="EditState" GeneratedDuration="0" To="BrowserState">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="EditStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="EditStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EditStateGrid">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BrowserStateGrid">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="BrowserStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="BrowserStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                </VisualStateGroup.Transitions>

                <VisualState x:Name="BrowserState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BrowserStateGrid">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EditStateGrid">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="EditState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EditStateGrid">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BrowserStateGrid">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid x:Name="EditStateGrid" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5" >
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Label Grid.Row="1" Grid.Column="0" Content="{Binding LabelDisplayNames[ContactGuid]}"  />
            <TextBox Grid.Row="1" Grid.Column="1"  x:Name="ContactGuidTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding ContactGuid, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5" IsEnabled="{Binding IsNewState}"  />
            <Label Grid.Row="1" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=ContactGuidTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="2" Grid.Column="0"  Content="{Binding LabelDisplayNames[Contact]}"  />
            <TextBox Grid.Row="2" Grid.Column="1"  x:Name="ContactTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding Contact, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5"  />
            <Label Grid.Row="2" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=ContactTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="3" Grid.Column="0"  Content="{Binding LabelDisplayNames[IsActive]}"  />
            <CheckBox Grid.Row="3" Grid.Column="1"  x:Name="IsActiveTextBox" HorizontalAlignment="Left"  Height="23"  IsChecked="{Binding IsActive, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Margin="10,0,10,5"  />
            <Label Grid.Row="3" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=IsActiveTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="4" Grid.Column="0"  Content="{Binding LabelDisplayNames[IsVisible]}"  />
            <CheckBox Grid.Row="4" Grid.Column="1"  x:Name="IsVisibleTextBox" HorizontalAlignment="Left"  Height="23"  IsChecked="{Binding IsVisible, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Margin="10,0,10,5"  />
            <Label Grid.Row="4" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=IsVisibleTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="5" Grid.Column="0"  Content="{Binding LabelDisplayNames[Description]}"  />
            <TextBox Grid.Row="5" Grid.Column="1"  x:Name="DescriptionTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding Description, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5"  />
            <Label Grid.Row="5" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=DescriptionTextBox}"  Margin="0,0,0,5"  />


            <Label Grid.Row="6" Grid.Column="0"  Content="{Binding LabelDisplayNames[ContactTypeId]}"  />
            <ComboBox Grid.Row="6" Grid.Column="1"  x:Name="ContactTypeIdComboBox" HorizontalAlignment="Left" 
                                         ItemsSource="{Binding Path=ContactTypes}"
                                         SelectedValuePath="ContactTypeId"
                                         
                                         SelectedValue="{Binding ContactTypeId, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  Margin="10,0,10,5">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding ContactTypeDescription}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Label Grid.Row="6" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=ContactTypeIdComboBox}"  Margin="0,0,0,5"  />

            <StackPanel Grid.Row="7" UseLayoutRounding="False" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0" Grid.ColumnSpan="3" >
                <Button  Command="{Binding SaveCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.SaveCommand}" Visibility="{Binding SaveEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Button  Command="{Binding UndoCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.UndoCommand}" />
            </StackPanel>
        </Grid>

        <Grid x:Name="BrowserStateGrid" Visibility="Visible" RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <i:Interaction.Triggers>
                <prism:InteractionRequestTrigger SourceObject="{Binding InformationDialog}">
                    <interactionRequest:InteractionDialogAction>
                        <interactionRequest:InteractionDialogAction.Dialog>
                            <interactionRequest:NotificationLocalModalInteractionDialog />
                        </interactionRequest:InteractionDialogAction.Dialog>
                        <interactionRequest:InteractionDialogAction.ContentTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Margin="6,0" Height="24" VerticalAlignment="Center" Source="/Images/Information.png" />
                                    <TextBlock Text="{Binding}" TextWrapping="Wrap" FontSize="14" VerticalAlignment="Center" />
                                </StackPanel>
                            </DataTemplate>
                        </interactionRequest:InteractionDialogAction.ContentTemplate>
                    </interactionRequest:InteractionDialogAction>
                </prism:InteractionRequestTrigger>

                <prism:InteractionRequestTrigger SourceObject="{Binding ConfirmationDialog}">
                    <interactionRequest:InteractionDialogAction>
                        <interactionRequest:InteractionDialogAction.Dialog>
                            <interactionRequest:ConfirmationLocalModalInteractionDialog />
                        </interactionRequest:InteractionDialogAction.Dialog>
                        <interactionRequest:InteractionDialogAction.ContentTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Margin="6,0" Height="24" VerticalAlignment="Center"  Source="/Images/Question.png"  />
                                    <TextBlock Text="{Binding}" TextWrapping="Wrap" FontSize="14" VerticalAlignment="Center" />
                                </StackPanel>
                            </DataTemplate>
                        </interactionRequest:InteractionDialogAction.ContentTemplate>
                    </interactionRequest:InteractionDialogAction>
                </prism:InteractionRequestTrigger>

            </i:Interaction.Triggers>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" MinHeight="50"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="{x:Static res:Resources.EnterpriseBranchContactsTDES_INDEX}" HorizontalAlignment="Center" Margin="0,1" FontSize="18" FontWeight="Bold" Grid.ColumnSpan="3"/>
                <StackPanel Grid.Row="1" UseLayoutRounding="False" Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="0,0,0,3" Grid.ColumnSpan="3" Background="DarkOrange">
                    <Button  Command="{Binding EnterpriseTDESCommand}"  HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{Binding EntDescription}"    />
                    <Button  Command="{Binding EnterpriseBranchTDESCommand}"  HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{Binding SearchEntBranchDescription}"    />
                </StackPanel>

                <View:StackPanelSearch Grid.Row="2" Grid.ColumnSpan="3"/>
                <View:StackPanelMngBottons Grid.Row="3" Grid.ColumnSpan="3"/>
            </Grid>

            <View:StackPanelPagination Grid.Row="1" />

            <DataGrid  Grid.Row="2" AutoGenerateColumns="false" EnableRowVirtualization="True"
				SelectionMode="Single"
				ItemsSource="{Binding Items, NotifyOnTargetUpdated=True}"  RowDetailsVisibilityMode="VisibleWhenSelected"
				SelectedItem="{Binding CurrentItem, Mode=TwoWay}"                            
				ScrollViewer.CanContentScroll="True"
				ScrollViewer.VerticalScrollBarVisibility="Auto"
				ScrollViewer.HorizontalScrollBarVisibility="Auto" CanUserAddRows="False" 
				Sorting="ItemsDataGrid_Sorting" TargetUpdated="ItemsDataGrid_TargetUpdated" Loaded="ItemsDataGrid_Loaded"
                IsReadOnly="True"
                   >
                <DataGrid.Columns>

                    <DataGridTextColumn x:Name="ContactGuidGuidColumn" Binding="{Binding ContactGuid}" Width="Auto" SortDirection="Ascending">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[ContactGuid], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>

                    <DataGridTextColumn x:Name="ContactColumn" Binding="{Binding Contact}" Width="Auto">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[Contact], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>


                    <DataGridCheckBoxColumn x:Name="IsActiveColumn" Binding="{Binding IsActive}" Width="Auto">
                        <DataGridCheckBoxColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[IsActive], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridCheckBoxColumn.HeaderTemplate>
                    </DataGridCheckBoxColumn>

                    <DataGridCheckBoxColumn x:Name="IsVisibleColumn" Binding="{Binding IsVisible}" Width="Auto">
                        <DataGridCheckBoxColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[IsVisible], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridCheckBoxColumn.HeaderTemplate>
                    </DataGridCheckBoxColumn>

                    <DataGridTextColumn x:Name="DescriptionColumn" Binding="{Binding Description}" Width="Auto">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[Description], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>


                    <DataGridComboBoxColumn x:Name="ContactTypeIdColumn" 
                                            SelectedValueBinding="{Binding ContactTypeId}"
                                            SelectedValuePath="ContactTypeId"
                                            DisplayMemberPath="ContactTypeDescription"                                            
                                            Width="Auto">
                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.ContactTypes}"/>
                                <Setter Property="IsReadOnly" Value="True"/>
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                        <DataGridComboBoxColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[ContactTypeId], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridComboBoxColumn.HeaderTemplate>
                    </DataGridComboBoxColumn>


                </DataGrid.Columns>
            </DataGrid>

            <View:StackPanelPagination Grid.Row="3" />

        </Grid>

    </Grid>
</UserControl>
