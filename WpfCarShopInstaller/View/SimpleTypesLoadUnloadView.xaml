<UserControl x:Name="SimpleTypesLoadUnloadViewControl"  x:Class="WpfCarShopInstaller.View.SimpleTypesLoadUnloadView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             
xmlns:res="clr-namespace:WpfCarShopInstaller.Properties"
xmlns:conv="clr-namespace:WpfCarShopInstaller.Converters"             
             
xmlns:prism="http://www.codeplex.com/prism"
xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             
            
xmlns:interactionRequest="clr-namespace:WpfCarShopCommon.InteractionRequest;assembly=WpfCarShopCommon"

             
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="700"
             
             RenderTransformOrigin="0.5,0.5">

    <UserControl.Resources>
        <conv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" TrueVal="Visible" FalseVal="Collapsed" />
        <Storyboard x:Key="StoryboardOnLoaded">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="SimpleTypesLoadUnloadViewControl">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>

    <UserControl.RenderTransform>
        <TransformGroup>
            <ScaleTransform/>
            <SkewTransform/>
            <RotateTransform/>
            <TranslateTransform/>
        </TransformGroup>
    </UserControl.RenderTransform>
    <UserControl.LayoutTransform>
        <TransformGroup>
            <ScaleTransform/>
            <SkewTransform/>
            <RotateTransform/>
            <TranslateTransform/>
        </TransformGroup>
    </UserControl.LayoutTransform>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource StoryboardOnLoaded}"/>
        </EventTrigger>
    </UserControl.Triggers>


    <Grid x:Name="RootGrid">

        <i:Interaction.Behaviors>
            <ei:DataStateBehavior Binding="{Binding StartState}" 
                                  Value="True" 
                                  TrueState="StartState" FalseState="ProcessLoadUnloadState"/>
        </i:Interaction.Behaviors>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualBrowserEditStateGroup">
                <VisualStateGroup.Transitions>
                    <VisualTransition From="StartState" GeneratedDuration="0" To="ProcessLoadUnloadState">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="StartLoadUnloadStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="StartLoadUnloadStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ProcessLoadUnloadStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ProcessLoadUnloadStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ProcessLoadUnloadStateGrid">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="StartLoadUnloadStateGrid">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                    <VisualTransition From="ProcessLoadUnloadState" GeneratedDuration="0" To="StartState">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ProcessLoadUnloadStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ProcessLoadUnloadStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ProcessLoadUnloadStateGrid">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="StartLoadUnloadStateGrid">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="StartLoadUnloadStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="StartLoadUnloadStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                </VisualStateGroup.Transitions>

                <VisualState x:Name="StartState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="StartLoadUnloadStateGrid">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ProcessLoadUnloadStateGrid">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="ProcessLoadUnloadState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ProcessLoadUnloadStateGrid">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="StartLoadUnloadStateGrid">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid x:Name="ProcessLoadUnloadStateGrid" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"  RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>


            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Margin="4" Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBlock  Text="{x:Static res:Resources.InProcess_TITLE}"/>
                <TextBlock  Text="{Binding LoadedCount}"/>
                <TextBlock  Text="{x:Static res:Resources.of_ITEMS}" />
                <TextBlock  Text="{Binding ReadCount}"/>
            </StackPanel>
            <Button  Grid.Row="1"  Command="{Binding UndoCommand}" HorizontalAlignment="Center" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.UndoCommand}" />
        </Grid>

        <Grid x:Name="StartLoadUnloadStateGrid" Visibility="Visible"  RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>

            <i:Interaction.Triggers>
                <prism:InteractionRequestTrigger SourceObject="{Binding InformationDialog}">
                    <interactionRequest:InteractionDialogAction>
                        <interactionRequest:InteractionDialogAction.Dialog>
                            <interactionRequest:NotificationLocalModalInteractionDialog />
                        </interactionRequest:InteractionDialogAction.Dialog>
                        <interactionRequest:InteractionDialogAction.ContentTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Margin="6,0" Height="24" VerticalAlignment="Center" Source="/Images/Information.png" />
                                    <TextBlock Text="{Binding}" TextWrapping="Wrap" FontSize="14" VerticalAlignment="Center" />
                                </StackPanel>
                            </DataTemplate>
                        </interactionRequest:InteractionDialogAction.ContentTemplate>
                    </interactionRequest:InteractionDialogAction>
                </prism:InteractionRequestTrigger>

                <prism:InteractionRequestTrigger SourceObject="{Binding ConfirmationDialog}">
                    <interactionRequest:InteractionDialogAction>
                        <interactionRequest:InteractionDialogAction.Dialog>
                            <interactionRequest:ConfirmationLocalModalInteractionDialog />
                        </interactionRequest:InteractionDialogAction.Dialog>
                        <interactionRequest:InteractionDialogAction.ContentTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Margin="6,0" Height="24" VerticalAlignment="Center"  Source="/Images/Question.png"  />
                                    <TextBlock Text="{Binding}" TextWrapping="Wrap" FontSize="14" VerticalAlignment="Center" />
                                </StackPanel>
                            </DataTemplate>
                        </interactionRequest:InteractionDialogAction.ContentTemplate>
                    </interactionRequest:InteractionDialogAction>
                </prism:InteractionRequestTrigger>


                <prism:InteractionRequestTrigger SourceObject="{Binding LocalDialog}">
                    <interactionRequest:InteractionDialogAction>
                        <interactionRequest:InteractionDialogAction.Dialog>
                            <interactionRequest:LocalModalInteractionDialog />
                        </interactionRequest:InteractionDialogAction.Dialog>
                        <interactionRequest:InteractionDialogAction.ContentTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>


                                    <Label Grid.Row="1" Grid.Column="0" Content="{Binding LabelDisplayNames[AddressTypeId]}"  />
                                    <TextBox Grid.Row="1" Grid.Column="1"  x:Name="AddressTypeIdTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding AddressTypeId, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5" IsEnabled="{Binding IsNewState}"  />
                                    <Label Grid.Row="1" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=AddressTypeIdTextBox}"  Margin="0,0,0,5" />

                                    <Label Grid.Row="2" Grid.Column="0"  Content="{Binding LabelDisplayNames[AddressTypeDescription]}"  />
                                    <TextBox Grid.Row="2" Grid.Column="1"  x:Name="AddressTypeDescriptionTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding AddressTypeDescription, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5"  />
                                    <Label Grid.Row="2" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=AddressTypeDescriptionTextBox}"  Margin="0,0,0,5"  />

                                    <StackPanel Grid.Row="3" UseLayoutRounding="False" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0" Grid.ColumnSpan="3" >
                                        <Button  Command="{Binding SaveCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.SaveCommand}" >
                                            <Button.Visibility>
                                                <Binding Path="SaveEnabled" Converter="{StaticResource BooleanToVisibilityConverter}" ConverterParameter="true"/>
                                            </Button.Visibility>
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <ei:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=interactionRequest:InteractionDialogBase, AncestorLevel=1}}" MethodName="Close"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                        <Button  Command="{Binding UndoCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.UndoCommand}" >
                                            <!--                                        
                                        <Button.Visibility>
                                            <Binding Path="IsUndoEnabled" Converter="{StaticResource BooleanToVisibilityConverter}" ConverterParameter="true"/>
                                        </Button.Visibility>
-->
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <ei:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=interactionRequest:InteractionDialogBase, AncestorLevel=1}}" MethodName="Close"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                    </StackPanel>

                                </Grid>
                                <!--
                            <StackPanel Orientation="Horizontal">
                                <Image Margin="6,0" Height="24" VerticalAlignment="Center"  Source="/Images/Question.png"  />
                                <TextBlock Text="{Binding}" TextWrapping="Wrap" FontSize="14" VerticalAlignment="Center" />
                            </StackPanel>
-->
                            </DataTemplate>
                        </interactionRequest:InteractionDialogAction.ContentTemplate>
                    </interactionRequest:InteractionDialogAction>
                </prism:InteractionRequestTrigger>



            </i:Interaction.Triggers>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="{x:Static res:Resources.SimpleTypesLoadUnload_INDEX}" HorizontalAlignment="Center" Margin="0,1" FontSize="18" FontWeight="Bold" Width="293" />

            <Label Grid.Row="1" Grid.Column="0"  Content="{x:Static res:Resources.BranchType_INDEX}" FontSize="16"  />
            <StackPanel Grid.Row="1" Grid.Column="1" UseLayoutRounding="False" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,-48,0" Width="455"  >
                <Button  Command="{Binding BranchTypeLoadCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.FromFile}" Visibility="{Binding BranchTypeEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Button  Command="{Binding BranchTypeSaveCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.ToFile}" Visibility="{Binding BranchTypeEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <TextBox x:Name="BranchTypeFileTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding BranchTypeFile, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,5" IsEnabled="{Binding IsNewState}"  />
                <Label FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=BranchTypeFileTextBox}"  Margin="0,0,0,5" />
            </StackPanel>

            <Label Grid.Row="2" Grid.Column="0"  Content="{x:Static res:Resources.ContactType_INDEX}" FontSize="16"  />
            <StackPanel Grid.Row="2" Grid.Column="1" UseLayoutRounding="False" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,-48,0" Width="455"  >
                <Button  Command="{Binding ContactTypeLoadCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.FromFile}" Visibility="{Binding ContactTypeEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Button  Command="{Binding ContactTypeSaveCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.ToFile}" Visibility="{Binding ContactTypeEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <TextBox x:Name="ContactTypeFileTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding ContactTypeFile, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,5" IsEnabled="{Binding IsNewState}"  />
                <Label FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=ContactTypeFileTextBox}"  Margin="0,0,0,5" />
            </StackPanel>

            <Label Grid.Row="3" Grid.Column="0"  Content="{x:Static res:Resources.Country_INDEX}" FontSize="16"  />
            <StackPanel Grid.Row="3" Grid.Column="1" UseLayoutRounding="False" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,-48,0" Width="455"  >
                <Button  Command="{Binding CountryLoadCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.FromFile}" Visibility="{Binding CountryEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Button  Command="{Binding CountrySaveCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.ToFile}" Visibility="{Binding CountryEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <TextBox x:Name="CountryFileTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding CountryFile, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,5" IsEnabled="{Binding IsNewState}"  />
                <Label FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=CountryFileTextBox}"  Margin="0,0,0,5" />
            </StackPanel>

            <Label Grid.Row="4" Grid.Column="0"  Content="{x:Static res:Resources.Currency_INDEX}" FontSize="16"  />
            <StackPanel Grid.Row="4" Grid.Column="1" UseLayoutRounding="False" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,-48,0" Width="455"  >
                <Button  Command="{Binding CurrencyLoadCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.FromFile}" Visibility="{Binding CurrencyEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Button  Command="{Binding CurrencySaveCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.ToFile}" Visibility="{Binding CurrencyEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <TextBox x:Name="CurrencyFileTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding CurrencyFile, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,5" IsEnabled="{Binding IsNewState}"  />
                <Label FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=CurrencyFileTextBox}"  Margin="0,0,0,5" />
            </StackPanel>

            <Label Grid.Row="5" Grid.Column="0"  Content="{x:Static res:Resources.SettlementType_INDEX}" FontSize="16"  />
            <StackPanel Grid.Row="5" Grid.Column="1" UseLayoutRounding="False" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,-48,0" Width="455"  >
                <Button  Command="{Binding SettlementTypeLoadCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.FromFile}" Visibility="{Binding SettlementTypeEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Button  Command="{Binding SettlementTypeSaveCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.ToFile}" Visibility="{Binding SettlementTypeEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <TextBox x:Name="SettlementTypeFileTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding SettlementTypeFile, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,5" IsEnabled="{Binding IsNewState}"  />
                <Label FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=SettlementTypeFileTextBox}"  Margin="0,0,0,5" />
            </StackPanel>

            <Label Grid.Row="6" Grid.Column="0"  Content="{x:Static res:Resources.StreetType_INDEX}" FontSize="16"  />
            <StackPanel Grid.Row="6" Grid.Column="1" UseLayoutRounding="False" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,-48,0" Width="455"  >
                <Button  Command="{Binding StreetTypeLoadCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.FromFile}" Visibility="{Binding StreetTypeEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Button  Command="{Binding StreetTypeSaveCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.ToFile}" Visibility="{Binding StreetTypeEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <TextBox x:Name="StreetTypeFileTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding StreetTypeFile, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,5" IsEnabled="{Binding IsNewState}"  />
                <Label FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=StreetTypeFileTextBox}"  Margin="0,0,0,5" />
            </StackPanel>

            <Label Grid.Row="7" Grid.Column="0"  Content="{x:Static res:Resources.Soato_INDEX}" FontSize="16"  />
            <StackPanel Grid.Row="7" Grid.Column="1" UseLayoutRounding="False" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,-48,0" Width="455"  >
                <Button  Command="{Binding SoatoLoadCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.FromFile}" Visibility="{Binding SoatoEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Button  Command="{Binding SoatoSaveCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.ToFile}" Visibility="{Binding SoatoEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <TextBox x:Name="SoatoFileTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding SoatoFile, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,5" IsEnabled="{Binding IsNewState}"  />
                <Label FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=SoatoFileTextBox}"  Margin="0,0,0,5" />
            </StackPanel>

            <Label Grid.Row="8" Grid.Column="0"  Content="{x:Static res:Resources.AddressType_INDEX}" FontSize="16"  />
            <StackPanel Grid.Row="8" Grid.Column="1" UseLayoutRounding="False" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,-48,0" Width="455"  >
                <Button  Command="{Binding AddressTypeLoadCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.FromFile}" Visibility="{Binding AddressTypeEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Button  Command="{Binding AddressTypeSaveCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.ToFile}" Visibility="{Binding AddressTypeEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <TextBox x:Name="AddressTypeFileTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding AddressTypeFile, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,5" IsEnabled="{Binding IsNewState}"  />
                <Label FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=AddressTypeFileTextBox}"  Margin="0,0,0,5" />
            </StackPanel>


            <Label Grid.Row="9" Grid.Column="0"  Content="{x:Static res:Resources.TecDocSrcType_INDEX}" FontSize="16"  />
            <StackPanel Grid.Row="9" Grid.Column="1" UseLayoutRounding="False" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,-48,0" Width="455"  >
                <Button  Command="{Binding EnterpriseTecDocSrcTypeTDESLoadCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.FromFile}" 
                         Visibility="{Binding EnterpriseTecDocSrcTypeTDESEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Button  Command="{Binding EnterpriseTecDocSrcTypeTDESSaveCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.ToFile}" 
                         Visibility="{Binding EnterpriseTecDocSrcTypeTDESEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <TextBox x:Name="EnterpriseTecDocSrcTypeTDESFileTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding EnterpriseTecDocSrcTypeTDESFile, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,5" IsEnabled="{Binding IsNewState}"  />
                <Label FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=EnterpriseTecDocSrcTypeTDESFileTextBox}"  Margin="0,0,0,5" />
            </StackPanel>


        </Grid>

    </Grid>
</UserControl>
