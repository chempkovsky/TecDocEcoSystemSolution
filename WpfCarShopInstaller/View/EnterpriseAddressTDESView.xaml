<UserControl x:Name="EnterpriseAddressTDESViewControl" x:Class="WpfCarShopInstaller.View.EnterpriseAddressTDESView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:p="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             
xmlns:View="clr-namespace:WpfCarShopInstaller.View"             
xmlns:utilities="clr-namespace:WpfCarShopInstaller.Utility"
             
xmlns:res="clr-namespace:WpfCarShopInstaller.Properties"
xmlns:conv="clr-namespace:WpfCarShopInstaller.Converters"             
xmlns:interactionRequest="clr-namespace:WpfCarShopCommon.InteractionRequest;assembly=WpfCarShopCommon"
xmlns:prism="http://www.codeplex.com/prism"
xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             
xmlns:wpftk="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
             
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="500"
             RenderTransformOrigin="0.5,0.5">

    <UserControl.Resources>
        <conv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" TrueVal="Visible" FalseVal="Collapsed" />
        <Storyboard x:Key="StoryboardOnLoaded">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="EnterpriseAddressTDESViewControl">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.RenderTransform>
        <TransformGroup>
            <ScaleTransform/>
            <SkewTransform/>
            <RotateTransform/>
            <TranslateTransform/>
        </TransformGroup>
    </UserControl.RenderTransform>
    <UserControl.LayoutTransform>
        <TransformGroup>
            <ScaleTransform/>
            <SkewTransform/>
            <RotateTransform/>
            <TranslateTransform/>
        </TransformGroup>
    </UserControl.LayoutTransform>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource StoryboardOnLoaded}"/>
        </EventTrigger>
    </UserControl.Triggers>


    <Grid x:Name="RootGrid" >
        <i:Interaction.Behaviors>
            <ei:DataStateBehavior Binding="{Binding BrowserState}" 
                                  Value="True" 
                                  TrueState="BrowserState" FalseState="EditState"/>
        </i:Interaction.Behaviors>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualBrowserEditStateGroup">
                <VisualStateGroup.Transitions>
                    <VisualTransition From="BrowserState" GeneratedDuration="0" To="EditState">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="BrowserStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="BrowserStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="EditStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="EditStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EditStateGrid">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BrowserStateGrid">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                    <VisualTransition From="EditState" GeneratedDuration="0" To="BrowserState">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="EditStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="EditStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EditStateGrid">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BrowserStateGrid">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="BrowserStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="BrowserStateGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                </VisualStateGroup.Transitions>

                <VisualState x:Name="BrowserState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BrowserStateGrid">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EditStateGrid">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="EditState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EditStateGrid">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BrowserStateGrid">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
        <Grid x:Name="EditStateGrid" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5" 
               ScrollViewer.CanContentScroll="True"
              >
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

<!--
            <Label Grid.Row="1" Grid.Column="0" Content="{Binding LabelDisplayNames[EntGuid]}"  />
            <TextBox Grid.Row="1" Grid.Column="1"  x:Name="EntGuidTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding EntGuid, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5" IsEnabled="{Binding IsNewState}"  />
            <Label Grid.Row="1" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=EntGuidTextBox}"  Margin="0,0,0,5"  />
-->
            <Label Grid.Row="1" Grid.Column="0" Content="{Binding LabelDisplayNames[AddressGuid]}"  />
            <TextBox Grid.Row="1" Grid.Column="1"  x:Name="AddressGuidTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding AddressGuid, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5" IsEnabled="{Binding IsNewState}"  />
            <Label Grid.Row="1" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=AddressGuidTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="2" Grid.Column="0"  Content="{Binding LabelDisplayNames[AddressTypeId]}"  />
            <ComboBox Grid.Row="2" Grid.Column="1"  x:Name="AddressTypeIdComboBox" HorizontalAlignment="Left" 
                                         ItemsSource="{Binding Path=AddressTypes}"
                                         SelectedValuePath="AddressTypeId"
                                         SelectedValue="{Binding AddressTypeId, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  Margin="10,0,10,5">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding AddressTypeDescription}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Label Grid.Row="2" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=AddressTypeIdComboBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="3" Grid.Column="0"  Content="{Binding LabelDisplayNames[CountryIso]}"  />
            <ComboBox Grid.Row="3" Grid.Column="1"  x:Name="CountryIsoComboBox" HorizontalAlignment="Left" 
                                         ItemsSource="{Binding Path=Country}"
                                         SelectedValuePath="CountryIso"
                                         SelectedValue="{Binding CountryIso, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  Margin="10,0,10,5">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding CountryName}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Label Grid.Row="3" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=CountryIsoComboBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="4" Grid.Column="0"  Content="{Binding LabelDisplayNames[AddressRegion]}"  />
            <TextBox Grid.Row="4" Grid.Column="1"  x:Name="AddressRegionTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding AddressRegion, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5"  />
            <Label Grid.Row="4" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=AddressRegionTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="5" Grid.Column="0"  Content="{Binding LabelDisplayNames[AddressDistrict]}"  />
            <TextBox Grid.Row="5" Grid.Column="1"  x:Name="AddressDistrictTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding AddressDistrict, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5"  />
            <Label Grid.Row="5" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=AddressDistrictTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="6" Grid.Column="0"  Content="{Binding LabelDisplayNames[AddressRural]}"  />
            <TextBox Grid.Row="6" Grid.Column="1"  x:Name="AddressRuralTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding AddressRural, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5"  />
            <Label Grid.Row="6" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=AddressRuralTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="7" Grid.Column="0"  Content="{Binding LabelDisplayNames[SettlementTypeId]}"  />
            <ComboBox Grid.Row="7" Grid.Column="1"  x:Name="SettlementTypeIdComboBox" HorizontalAlignment="Left" 
                                         ItemsSource="{Binding Path=SettlementType}"
                                         SelectedValuePath="SettlementTypeId"
                                         SelectedValue="{Binding SettlementTypeId, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  Margin="10,0,10,5">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding SettlementTypeDescription}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Label Grid.Row="7" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=SettlementTypeIdComboBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="8" Grid.Column="0"  Content="{Binding LabelDisplayNames[AddressSettlementName]}"  />
            <TextBox Grid.Row="8" Grid.Column="1"  x:Name="AddressSettlementNameTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding AddressSettlementName, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5"  />
            <Label Grid.Row="8" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=AddressSettlementNameTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="9" Grid.Column="0"  Content="{Binding LabelDisplayNames[SoatoId]}"  />
            <StackPanel Grid.Row="9" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Left">
                <TextBox   x:Name="SoatoIdTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding SoatoId, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5"  />
                <Button  Command="{Binding SelectSoatoCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="  ...  " Visibility="Visible" />
            </StackPanel>
            <Label Grid.Row="9" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=SoatoIdTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="10" Grid.Column="0"  Content="{Binding LabelDisplayNames[StreetTypeId]}"  />
            <ComboBox Grid.Row="10" Grid.Column="1"  x:Name="StreetTypeIdComboBox" HorizontalAlignment="Left" 
                                         ItemsSource="{Binding Path=StreetType}"
                                         SelectedValuePath="StreetTypeId"
                                         SelectedValue="{Binding StreetTypeId, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  Margin="10,0,10,5">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding StreetTypeDescription}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Label Grid.Row="10" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=StreetTypeIdComboBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="11" Grid.Column="0"  Content="{Binding LabelDisplayNames[AddressStreetName]}"  />
            <TextBox Grid.Row="11" Grid.Column="1"  x:Name="AddressStreetNameTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding AddressStreetName, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5"  />
            <Label Grid.Row="11" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=AddressStreetNameTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="12" Grid.Column="0"  Content="{Binding LabelDisplayNames[AddressHouse]}"  />
            <TextBox Grid.Row="12" Grid.Column="1"  x:Name="AddressHouseTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding AddressHouse, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5"  />
            <Label Grid.Row="12" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=AddressHouseTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="13" Grid.Column="0"  Content="{Binding LabelDisplayNames[AddressBuilding]}"  />
            <TextBox Grid.Row="13" Grid.Column="1"  x:Name="AddressBuildingTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding AddressBuilding, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5"  />
            <Label Grid.Row="13" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=AddressBuildingTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="14" Grid.Column="0"  Content="{Binding LabelDisplayNames[AddressOffice]}"  />
            <TextBox Grid.Row="14" Grid.Column="1"  x:Name="AddressOfficeTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding AddressOffice, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5"  />
            <Label Grid.Row="14" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=AddressOfficeTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="15" Grid.Column="0"  Content="{Binding LabelDisplayNames[AddressPostCode]}"  />
            <TextBox Grid.Row="15" Grid.Column="1"  x:Name="AddressPostCodeTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding AddressPostCode, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5"  />
            <Label Grid.Row="15" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=AddressPostCodeTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="16" Grid.Column="0"  Content="{Binding LabelDisplayNames[AddressValidFrom]}"  />
<!--            
            <TextBox Grid.Row="16" Grid.Column="1"  x:Name="AddressValidFromTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding AddressValidFrom, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5"  />
-->
            <DatePicker Grid.Row="16" Grid.Column="1"  x:Name="AddressValidFromTextBox" HorizontalAlignment="Left" Text="{Binding AddressValidFrom, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Margin="10,0,10,5"/>
            <Label Grid.Row="16" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=AddressValidFromTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="17" Grid.Column="0"  Content="{Binding LabelDisplayNames[AddressValidTo]}"  />
<!--            
            <TextBox Grid.Row="17" Grid.Column="1"  x:Name="AddressValidToTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding AddressValidTo, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5"  />
-->
            <DatePicker Grid.Row="17" Grid.Column="1"  x:Name="AddressValidToTextBox" HorizontalAlignment="Left" Text="{Binding AddressValidTo, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Margin="10,0,10,5"/>
            <Label Grid.Row="17" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=AddressValidToTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="18" Grid.Column="0"  Content="{Binding LabelDisplayNames[IsActive]}"  />
            <CheckBox Grid.Row="18" Grid.Column="1"  x:Name="IsActiveTextBox" HorizontalAlignment="Left"  Height="23"  IsChecked="{Binding IsActive, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Margin="10,0,10,5"  />
            <Label Grid.Row="18" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=IsActiveTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="19" Grid.Column="0"  Content="{Binding LabelDisplayNames[IsVisible]}"  />
            <CheckBox Grid.Row="19" Grid.Column="1"  x:Name="IsVisibleTextBox" HorizontalAlignment="Left"  Height="23"  IsChecked="{Binding IsVisible, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Margin="10,0,10,5"  />
            <Label Grid.Row="19" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=IsVisibleTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="20" Grid.Column="0"  Content="{Binding LabelDisplayNames[AddressLongitude]}"  />
            <TextBox Grid.Row="20" Grid.Column="1"  x:Name="AddressLongitudeTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding AddressLongitude, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5"  />
            <Label Grid.Row="20" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=AddressLongitudeTextBox}"  Margin="0,0,0,5"  />

            <Label Grid.Row="21" Grid.Column="0"  Content="{Binding LabelDisplayNames[AddressLatitude]}"  />
            <TextBox Grid.Row="21" Grid.Column="1"  x:Name="AddressLatitudeTextBox" HorizontalAlignment="Left"  Height="23" TextWrapping="Wrap" Text="{Binding AddressLatitude, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="300" Margin="10,0,10,5"  />
            <Label Grid.Row="21" Grid.Column="2" FontWeight="Bold" Foreground="Red" Content="{Binding (Validation.Errors).CurrentItem.ErrorContent, ElementName=AddressLatitudeTextBox}"  Margin="0,0,0,5"  />


            <StackPanel Grid.Row="22" UseLayoutRounding="False" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0" Grid.ColumnSpan="3" >
                <Button  Command="{Binding SaveCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.SaveCommand}" Visibility="{Binding SaveEnabled, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Button  Command="{Binding UndoCommand}" HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{x:Static res:Resources.UndoCommand}" />
            </StackPanel>
        </Grid>
        </ScrollViewer>
        
        <Grid x:Name="BrowserStateGrid" Visibility="Visible" RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <i:Interaction.Triggers>
                <prism:InteractionRequestTrigger SourceObject="{Binding InformationDialog}">
                    <interactionRequest:InteractionDialogAction>
                        <interactionRequest:InteractionDialogAction.Dialog>
                            <interactionRequest:NotificationLocalModalInteractionDialog />
                        </interactionRequest:InteractionDialogAction.Dialog>
                        <interactionRequest:InteractionDialogAction.ContentTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Margin="6,0" Height="24" VerticalAlignment="Center" Source="/Images/Information.png" />
                                    <TextBlock Text="{Binding}" TextWrapping="Wrap" FontSize="14" VerticalAlignment="Center" />
                                </StackPanel>
                            </DataTemplate>
                        </interactionRequest:InteractionDialogAction.ContentTemplate>
                    </interactionRequest:InteractionDialogAction>
                </prism:InteractionRequestTrigger>

                <prism:InteractionRequestTrigger SourceObject="{Binding ConfirmationDialog}">
                    <interactionRequest:InteractionDialogAction>
                        <interactionRequest:InteractionDialogAction.Dialog>
                            <interactionRequest:ConfirmationLocalModalInteractionDialog />
                        </interactionRequest:InteractionDialogAction.Dialog>
                        <interactionRequest:InteractionDialogAction.ContentTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Margin="6,0" Height="24" VerticalAlignment="Center"  Source="/Images/Question.png"  />
                                    <TextBlock Text="{Binding}" TextWrapping="Wrap" FontSize="14" VerticalAlignment="Center" />
                                </StackPanel>
                            </DataTemplate>
                        </interactionRequest:InteractionDialogAction.ContentTemplate>
                    </interactionRequest:InteractionDialogAction>
                </prism:InteractionRequestTrigger>

            </i:Interaction.Triggers>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" MinHeight="50"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="{x:Static res:Resources.EnterpriseAddressTDES_INDEX}" HorizontalAlignment="Center" Margin="0,1" FontSize="18" FontWeight="Bold" Grid.ColumnSpan="3"/>
                <StackPanel Grid.Row="1" UseLayoutRounding="False" Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="0,0,0,3" Grid.ColumnSpan="3" Background="DarkOrange">
                    <Button  Command="{Binding EnterpriseTDESCommand}"  HorizontalAlignment="Left" Height="Auto" Width="Auto" Margin="3"  VerticalAlignment="Center" Padding="5,2" Content="{Binding EntDescription}"    />
                </StackPanel>

                <View:StackPanelSearch Grid.Row="2" Grid.ColumnSpan="3"/>
                <View:StackPanelMngBottons Grid.Row="3" Grid.ColumnSpan="3"/>
            </Grid>
            
            <View:StackPanelPagination Grid.Row="1" />

            <DataGrid  Grid.Row="2" AutoGenerateColumns="false" EnableRowVirtualization="True"
				SelectionMode="Single"
				ItemsSource="{Binding Items, NotifyOnTargetUpdated=True}"  RowDetailsVisibilityMode="VisibleWhenSelected"
				SelectedItem="{Binding CurrentItem, Mode=TwoWay}"                            
				ScrollViewer.CanContentScroll="True"
				ScrollViewer.VerticalScrollBarVisibility="Auto"
				ScrollViewer.HorizontalScrollBarVisibility="Auto" CanUserAddRows="False" 
				Sorting="ItemsDataGrid_Sorting" TargetUpdated="ItemsDataGrid_TargetUpdated" Loaded="ItemsDataGrid_Loaded"
                IsReadOnly="True">
                <DataGrid.Columns>

                    <DataGridTextColumn x:Name="AddressGuidColumn" Binding="{Binding AddressGuid}" Width="Auto" SortDirection="Ascending">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[AddressGuid], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>

                    <DataGridComboBoxColumn x:Name="AddressTypeIdColumn" 
                                            SelectedValueBinding="{Binding AddressTypeId}"
                                            SelectedValuePath="AddressTypeId"
                                            DisplayMemberPath="AddressTypeDescription"                                            
                                            Width="Auto">
                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.AddressTypes}"/>
                                <Setter Property="IsReadOnly" Value="True"/>
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                        <DataGridComboBoxColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[AddressTypeId], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridComboBoxColumn.HeaderTemplate>
                    </DataGridComboBoxColumn>

                    <DataGridComboBoxColumn x:Name="CountryIsoColumn" 
                                            SelectedValueBinding="{Binding CountryIso}"
                                            SelectedValuePath="CountryIso"
                                            DisplayMemberPath="CountryName"                                            
                                            Width="Auto">
                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.Country}"/>
                                <Setter Property="IsReadOnly" Value="True"/>
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                        <DataGridComboBoxColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[CountryIso], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridComboBoxColumn.HeaderTemplate>
                    </DataGridComboBoxColumn>

                    <DataGridTextColumn x:Name="AddressRegionColumn" Binding="{Binding AddressRegion}" Width="Auto">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[AddressRegion], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>

                    <DataGridTextColumn x:Name="AddressDistrictColumn" Binding="{Binding AddressDistrict}" Width="Auto">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[AddressDistrict], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>

                    <DataGridTextColumn x:Name="AddressRuralColumn" Binding="{Binding AddressRural}" Width="Auto">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[AddressRural], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>

                    <DataGridComboBoxColumn x:Name="SettlementTypeIdColumn" 
                                            SelectedValueBinding="{Binding SettlementTypeId}"
                                            SelectedValuePath="SettlementTypeId"
                                            DisplayMemberPath="SettlementTypeDescription"                                            
                                            Width="Auto">
                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.SettlementType}"/>
                                <Setter Property="IsReadOnly" Value="True"/>
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                        <DataGridComboBoxColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[SettlementTypeId], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridComboBoxColumn.HeaderTemplate>
                    </DataGridComboBoxColumn>

                    <DataGridTextColumn x:Name="AddressSettlementNameColumn" Binding="{Binding AddressSettlementName}" Width="Auto">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[AddressSettlementName], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>

                    <DataGridTextColumn x:Name="SoatoColumn" Binding="{Binding SoatoId}" Width="Auto">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[SoatoId], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>

                    <DataGridComboBoxColumn x:Name="StreetTypeIdColumn" 
                                            SelectedValueBinding="{Binding StreetTypeId}"
                                            SelectedValuePath="StreetTypeId"
                                            DisplayMemberPath="StreetTypeDescription"                                            
                                            Width="Auto">
                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.StreetType}"/>
                                <Setter Property="IsReadOnly" Value="True"/>
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                        <DataGridComboBoxColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[StreetTypeId], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridComboBoxColumn.HeaderTemplate>
                    </DataGridComboBoxColumn>

                    <DataGridTextColumn x:Name="AddressStreetNameColumn" Binding="{Binding AddressStreetName}" Width="Auto">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[AddressStreetName], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>

                    <DataGridTextColumn x:Name="AddressHouseColumn" Binding="{Binding AddressHouse}" Width="Auto">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[AddressHouse], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>

                    <DataGridTextColumn x:Name="AddressBuildingColumn" Binding="{Binding AddressBuilding}" Width="Auto">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[AddressBuilding], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>

                    <DataGridTextColumn x:Name="AddressOfficeColumn" Binding="{Binding AddressOffice}" Width="Auto">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[AddressOffice], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>

                    <DataGridTextColumn x:Name="AddressPostCodeColumn" Binding="{Binding AddressPostCode}" Width="Auto">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[AddressPostCode], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>

                    
                    <DataGridCheckBoxColumn x:Name="IsActiveColumn" Binding="{Binding IsActive}" Width="Auto">
                        <DataGridCheckBoxColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[IsActive], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridCheckBoxColumn.HeaderTemplate>
                    </DataGridCheckBoxColumn>

                    <DataGridCheckBoxColumn x:Name="IsVisibleColumn" Binding="{Binding IsVisible}" Width="Auto">
                        <DataGridCheckBoxColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[IsVisible], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridCheckBoxColumn.HeaderTemplate>
                    </DataGridCheckBoxColumn>

                    <DataGridTextColumn x:Name="AddressLongitudeColumn" Binding="{Binding AddressLongitude}" Width="Auto">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[AddressLongitude], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>

                    <DataGridTextColumn x:Name="AddressLatitudeColumn" Binding="{Binding AddressLatitude}" Width="Auto">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text=
                                   "{Binding DataContext.LabelDisplayNames[AddressLatitude], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>

                </DataGrid.Columns>
            </DataGrid>
            
            <View:StackPanelPagination Grid.Row="3" />
<!--            
            xmlns:View="clr-namespace:WpfCarShopInstaller.View" 
            

-->
        </Grid>
        
    </Grid>


</UserControl>
